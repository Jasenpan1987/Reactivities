{"version":3,"sources":["app/models/Pagination.ts","app/api/agent.ts","app/stores/ActivityStore.ts","app/models/Activity.ts","app/models/Profile.ts","app/stores/ProfileStore.ts","app/stores/UserStore.ts","app/stores/store.ts","app/stores/CommonStore.ts","app/stores/ModalStore.ts","app/stores/CommentStore.ts","app/layout/Navbar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityItemPlaceholder.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/image-upload/PhotoWidgetCropper.tsx","app/common/image-upload/PhotoWidgetDropzone.tsx","app/common/image-upload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","interceptors","request","use","a","token","store","commonStore","headers","Authorization","response","JSON","parse","error","status","config","toast","method","errors","hasOwnProperty","history","push","modelStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","defaults","baseURL","process","PredicateKeys","responseBody","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","photoId","deletePhoto","updateProfile","profile","displayName","bio","updateFollowing","listFollowings","predicate","listActivities","Activity","initialValues","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","all","setPagingParams","setPredicate","value","resetPredicate","forEach","startDate","isGoing","isHost","loadActivities","setLoadingInitial","axiosParams","activities","map","act","Date","runInAction","setActivity","setPagination","console","log","getActivityFromMemory","attendees","some","hostUsername","host","find","loadActivity","isLoading","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followerCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","a1","a2","getTime","entries","activitiesByDate","reduce","format","ProfileStore","loadingProfile","uploading","loadingFollowings","followings","loadingActivities","activeTab","setActiveTab","loadProfile","photo","photos","isMain","setImage","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","facebookLogin","apiLogin","catch","window","FB","authResponse","scope","getFacebookLoginStatus","getLoginStatus","getUser","modalStore","closeModal","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","localStorage","getItem","appLoaded","setAppLoaded","setItem","removeItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","header","as","NavLink","to","exact","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","ActivityFilters","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","ActivityListItemPlaceholder","Placeholder","fluid","Segment","Group","minHeight","Line","Paragraph","secondary","clearing","disabled","floated","Reveal","animated","Content","visible","hidden","basic","e","preventDefault","handleFollow","getShortenText","numOfChars","length","words","newText","word","Card","Description","Icon","styles","borderColor","borderWidth","List","horizontal","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Label","textAlign","marginBottom","groupedActivities","group","sub","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","Input","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","idx","validationSchema","Yup","required","join","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useParams","useHistory","setValues","handleFormSubmit","uuid","nullable","enableReinitialize","handleChange","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","isEditMode","setIsEditMode","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","theme","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"mYAOaA,EAIX,WAAYC,EAASC,GAAyB,yBAH9CD,UAG6C,OAF7CC,gBAE6C,EAC3CC,KAAKF,KAAOA,EACZE,KAAKD,WAAaA,GAITE,EAGX,aAA2C,IAA/BC,EAA8B,uDAAjB,EAAGC,EAAc,uDAAH,EAAG,yBAF1CD,gBAE0C,OAD1CC,cAC0C,EACxCH,KAAKE,WAAaA,EAClBF,KAAKG,SAAWA,GCPpBC,IAAMC,aAAaC,QAAQC,IAA3B,+BAAAC,EAAA,MAA+B,WAAOF,GAAP,eAAAE,EAAA,6DACvBC,EAAQC,EAAMC,YAAYF,SAE9BH,EAAQM,QAAQC,cAAhB,iBAA0CJ,IAHf,kBAKtBH,GALsB,2CAA/B,uDAQAF,IAAMC,aAAaS,SAASP,IAA5B,+BAAAC,EAAA,MACE,WAAOM,GAAP,eAAAN,EAAA,iFAKQT,EAAae,EAASF,QAAT,YALrB,uBAOIE,EAAShB,KAAO,IAAID,EAClBiB,EAAShB,KACTiB,KAAKC,MAAMjB,IATjB,kBAYWe,GAZX,gCAcSA,GAdT,2CADF,uDAiBE,SAACG,GACC,MAA0CA,EAAMH,SAAxChB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAAQP,EAA9B,EAA8BA,QAC9B,OAAQM,GACN,KAAK,IASH,GARoB,kBAATpB,GACTsB,IAAMH,MAAMnB,GAGQ,QAAlBqB,EAAOE,QAAoBvB,EAAKwB,OAAOC,eAAe,OACxDC,GAAQC,KAAK,aAGX3B,EAAKwB,OAAQ,CACf,IAAMI,EAAmB,GACzB,IAAK,IAAMC,KAAO7B,EAAKwB,OACjBxB,EAAKwB,OAAOK,IACdD,EAAiBD,KAAK3B,EAAKwB,OAAOK,IAItC,MAAMD,EAAiBE,OAEzB,MAEF,KAAK,IAEU,MAAXV,GACAN,EAAQ,oBAAoBiB,WAA5B,kCAEAnB,EAAMoB,UAAUC,SAChBX,IAAMH,MAAM,wCAGd,MAEF,KAAK,IACHO,GAAQC,KAAK,aACb,MAEF,KAAK,IACHf,EAAMC,YAAYqB,eAAejB,KAAKC,MAAMlB,IAC5C0B,GAAQC,KAAK,gBACb,MAEF,QACE,OAAOQ,QAAQC,OAAOjB,OAK9Bb,IAAM+B,SAASC,QAAUC,OAEzB,ICpFYC,EDoFNC,EAAe,SAAIzB,GAAJ,OAAmCA,EAAShB,MAE3DQ,EACC,SAAIkC,GAAJ,OAAoBpC,IAAMqC,IAAOD,GAAKE,KAAKH,IAD5CjC,EAEE,SAAIkC,EAAaG,GAAjB,OACJvC,IAAMwC,KAAQJ,EAAKG,GAAMD,KAAKH,IAH5BjC,EAIC,SAAIkC,EAAaG,GAAjB,OAA8BvC,IAAMyC,IAAOL,EAAKG,GAAMD,KAAKH,IAJ5DjC,EAKC,SAAIkC,GAAJ,OAAoBpC,IAAM0C,OAAUN,GAAKE,KAAKH,IA8DtCQ,EAND,CACZC,WAtDiB,CACjBC,KAAM,SAACC,GAAD,OACJ9C,IACGqC,IAAiC,cAAe,CAC/CS,WAEDR,KAAKH,IACVY,QAAS,SAACC,GAAD,OAAgB9C,EAAA,sBAAqC8C,KAC9DC,OAAQ,SAACC,GAAD,OACNhD,EAAiC,cAAegD,IAClDC,OAAQ,SAACD,GAAD,OACNhD,EAAA,sBAA+CgD,EAASF,IAAME,IAChER,OAAQ,SAACM,GAAD,OAAgB9C,EAAA,sBAAiC8C,KACzDI,OAAQ,SAACJ,GAAD,OAAgB9C,EAAA,sBAAkC8C,EAAlC,WAA+C,MA0CvEK,QAvCc,CACdC,QAAS,kBAAMpD,EAAmB,aAClCqD,MAAO,SAACC,GAAD,OAA2BtD,EAAoB,iBAAkBsD,IACxEC,SAAU,SAACD,GAAD,OACRtD,EAAoB,oBAAqBsD,IAC3CE,QAAS,SAACC,GAAD,OACPzD,EAAA,uCAAoDyD,GAAe,KACrEC,aAAc,kBAAM1D,EAAoB,mBAAoB,MAiC5D2D,SA9Be,CACfxB,IAAK,SAACyB,GAAD,OAAsB5D,EAAA,oBAAkC4D,KAC7DC,YAAa,SAACC,GACZ,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,OAAQH,GACjBhE,IAAMwC,KAAY,UAAWyB,EAAU,CAC5CzD,QAAS,CAAE,eAAgB,0BAG/B4D,aAAc,SAACC,GAAD,OACZnE,EAAA,kBAAwBmE,EAAxB,YAA2C,KAC7CC,YAAa,SAACD,GAAD,OAAqBnE,EAAA,kBAAuBmE,KACzDE,cAAe,SAACC,GAAD,OACbtE,EAAA,YAAyB,CACvBuE,YAAaD,EAAQC,YACrBC,IAAKF,EAAQE,OAEjBC,gBAAiB,SAACb,GAAD,OACf5D,EAAA,kBAAwB4D,GAAY,KACtCc,eAAgB,SAACd,EAAkBe,GAAnB,OACd3E,EAAA,kBAAkC4D,EAAlC,sBAAwDe,KAC1DC,eAAgB,SAAChB,EAAkBe,GAAnB,OACd3E,EAAA,oBACe4D,EADf,iCACgDe,OErIvCE,EACX,WAAYC,GAAqC,oBAC/CC,OAAOC,OAAOtF,KAAMoF,IAIXG,EASX,WAAYjC,GAAgC,yBAR5CF,QAAcoC,EAQ6B,KAP3CC,MAAgB,GAO2B,KAN3CC,SAAmB,GAMwB,KAL3CC,YAAsB,GAKqB,KAJ3CC,KAAoB,KAIuB,KAH3CC,KAAe,GAG4B,KAF3CC,MAAgB,GAGVxC,IACFtD,KAAKoD,GAAKE,EAASF,GACnBpD,KAAKyF,MAAQnC,EAASmC,MACtBzF,KAAK0F,SAAWpC,EAASoC,SACzB1F,KAAK2F,YAAcrC,EAASqC,YAC5B3F,KAAK4F,KAAOtC,EAASsC,KACrB5F,KAAK6F,KAAOvC,EAASuC,KACrB7F,KAAK8F,MAAQxC,EAASwC,QC5BfC,EACX,WAAYnC,GAAc,oBACxB5D,KAAKkE,SAAWN,EAAKM,SACrBlE,KAAK6E,YAAcjB,EAAKiB,YACxB7E,KAAKgG,MAAQpC,EAAKoC,Q,SFTV1D,K,UAAAA,E,sBAAAA,E,gBAAAA,E,mBAAAA,M,SAWS2D,E,WAUnB,aAAe,IAAD,gCATdC,iBAA0C,IAAIC,IAShC,KARdC,sBAAyCZ,EAQ3B,KAPda,UAAW,EAOG,KANdC,SAAU,EAMI,KALdC,gBAAiB,EAKH,KAJdxG,WAAgC,KAIlB,KAHdyG,aAAe,IAAIvG,EAGL,KAFdgF,WAA0B,IAAIkB,KAAMM,IAAInE,EAAcoE,KAAK,GAE7C,KAadC,gBAAkB,SAACH,GACjB,EAAKA,aAAeA,GAdR,KAiBdI,aAAe,SAAC3B,EAA0B4B,GACxC,IAAMC,EAAiB,kBACrB,EAAK7B,UAAU8B,SAAQ,SAACF,EAAOlF,GACzBA,IAAQW,EAAc0E,WACxB,EAAK/B,UAAUnC,OAAOnB,OAG5B,OAAQsD,GACN,KAAK3C,EAAcoE,IACjBI,IACA,EAAK7B,UAAUwB,IAAInE,EAAcoE,KAAK,GACtC,MAGF,KAAKpE,EAAc2E,QACjBH,IACA,EAAK7B,UAAUwB,IAAInE,EAAc2E,SAAS,GAC1C,MAGF,KAAK3E,EAAc4E,OACjBJ,IACA,EAAK7B,UAAUwB,IAAInE,EAAc4E,QAAQ,GACzC,MAGF,KAAK5E,EAAc0E,UACjB,EAAK/B,UAAUnC,OAAOR,EAAc0E,WACpC,EAAK/B,UAAUwB,IAAInE,EAAc0E,UAAWH,KA7CpC,KAmFdM,eAnFc,sBAmFG,kCAAA3G,EAAA,6DACf,EAAK4G,mBAAkB,GADR,kBAGsBrE,EAAMC,WAAWC,KAClD,EAAKoE,aAJM,gBAGLvH,EAHK,EAGLA,KAAMC,EAHD,EAGCA,WAIRuH,EAAaxH,EAAKyH,KAAI,SAACC,GAAD,mBAAC,eACxBA,GADuB,IAE1B5B,KAAM,IAAI6B,KAAKD,EAAI5B,WAGrB8B,aAAY,WACVJ,EAAWP,SAAQ,SAACS,GAClB,EAAKG,YAAYH,GACjB,EAAKI,cAAc7H,SAfV,kDAmBb8H,QAAQC,IAAI,wBAAZ,MAnBa,yBAqBbJ,aAAY,WACV,EAAKN,mBAAkB,MAtBZ,6EAnFH,KA8GNQ,cAAgB,SAAC7H,GACvB,EAAKA,WAAaA,GA/GN,KAkHNgI,sBAAwB,SAAC3E,GAC/B,OAAO,EAAK8C,iBAAiBzD,IAAIW,IAnHrB,KAsHNuE,YAAc,SAACrE,GACrB,IACU,EADFM,EAASlD,EAAMoB,UAAf8B,KACJA,IACFN,EAAS2D,QAAU3D,EAAS0E,UAAWC,MACrC,SAACzH,GAAD,OAAOA,EAAE0D,WAAaN,EAAKM,YAE7BZ,EAAS4D,OAAS5D,EAAS4E,eAAiBtE,EAAKM,SACjDZ,EAAS6E,KAAT,UAAgB7E,EAAS0E,iBAAzB,aAAgB,EAAoBI,MAClC,SAAC5H,GAAD,OAAOA,EAAE0D,WAAaZ,EAAS4E,iBAInC5E,EAASsC,KAAO,IAAI6B,KAAKnE,EAASsC,MAElC,EAAKM,iBAAiBO,IAAInD,EAASF,GAAIE,IApI3B,KAuId+E,aAvIc,uCAuIC,WAAOjF,GAAP,eAAA5C,EAAA,2DACT8C,EAAW,EAAKyE,sBAAsB3E,IAD7B,gBAGX,EAAKgD,iBAAmB9C,EAHb,8BAKX,EAAK8D,mBAAkB,GALZ,kBAOQrE,EAAMC,WAAWG,QAAQC,GAPjC,OAOTE,EAPS,OAQToE,aAAY,WACV,EAAKC,YAAYrE,GACjB,EAAK8C,iBAAmB9C,KAVjB,kDAaTuE,QAAQC,IAAI,0BAbH,yBAeTJ,aAAY,WACV,EAAKN,mBAAkB,MAhBhB,8CAoBN9D,GApBM,gEAvID,2DA8Jd8D,kBAAoB,SAACkB,GACnB,EAAK/B,eAAiB+B,GA/JV,KAkKdC,eAlKc,uCAkKG,WAAOjF,GAAP,mBAAA9C,EAAA,6DACToD,EAAOlD,EAAMoB,UAAU8B,KACvB4E,EAAW,IAAIzC,EAAQnC,IACvB6E,EAAc,IAAItD,EAAS7B,IACrB4E,aAAetE,EAAMM,SACjCuE,EAAYT,UAAY,CAACQ,GACzB,EAAKb,YAAYc,GANF,kBAQP1F,EAAMC,WAAWK,OAAOC,GARjB,OASboE,aAAY,WACV,EAAKtB,iBAAmBqC,KAVb,kDAabZ,QAAQC,IAAI,iBAbC,0DAlKH,2DAmLdY,eAnLc,uCAmLG,WAAOpF,GAAP,SAAA9C,EAAA,+EAEPuC,EAAMC,WAAWO,OAAOD,GAFjB,OAGboE,aAAY,WACV,GAAIpE,EAASF,GAAI,CACf,IAAIuF,EAAe,2BACd,EAAKZ,sBAAsBzE,EAASF,KACpCE,GAEL,EAAK4C,iBAAiBO,IAAInD,EAASF,GAAIuF,GACvC,EAAKvC,iBAAmBuC,MAVf,+CAcbd,QAAQC,IAAI,iBAdC,wDAnLH,2DAqMdc,eArMc,uCAqMG,WAAOxF,GAAP,SAAA5C,EAAA,6DACf,EAAK8F,SAAU,EADA,kBAGPvD,EAAMC,WAAWF,OAAOM,GAHjB,OAIbsE,aAAY,WAAO,IAAD,EAChB,EAAKxB,iBAAiBpD,OAAOM,IACzB,YAAKgD,wBAAL,eAAuBhD,MAAOA,IAChC,EAAKgD,sBAAmBZ,MAPf,gDAWbqC,QAAQC,IAAI,iBAXC,yBAabJ,aAAY,WACV,EAAKpB,SAAU,KAdJ,4EArMH,2DAwNduC,iBAxNc,sBAwNK,4BAAArI,EAAA,6DACXoD,EAAOlD,EAAMoB,UAAU8B,KAC7B,EAAK0C,SAAU,EAFE,kBAKTvD,EAAMC,WAAWQ,OAAO,EAAK4C,iBAAkBhD,IALtC,OAMfsE,aAAY,WAAO,IAAD,EAChB,aAAI,EAAKtB,wBAAT,aAAI,EAAuBa,QAAS,CAAC,IAAD,EAClC,EAAKb,iBAAiB4B,UAAtB,UACE,EAAK5B,iBAAiB4B,iBADxB,aACE,EAAiCc,QAC/B,SAACtI,GAAD,OAAOA,EAAE0D,YAAF,OAAeN,QAAf,IAAeA,OAAf,EAAeA,EAAMM,aAEhC,EAAKkC,iBAAiBa,SAAU,MAC3B,CAAC,IAAD,IACCuB,EAAW,IAAIzC,EAAQnC,GAC7B,YAAKwC,wBAAL,mBAAuB4B,iBAAvB,SAAkCvG,KAAK+G,GACvC,EAAKpC,iBAAkBa,SAAU,EAGnC,EAAKf,iBAAiBO,IACpB,EAAKL,iBAAkBhD,GACvB,EAAKgD,qBArBM,gDAyBfyB,QAAQC,IAAR,MAzBe,yBA2BfJ,aAAY,kBAAO,EAAKpB,SAAU,KA3BnB,4EAxNL,KAuPdyC,qBAvPc,sBAuPS,sBAAAvI,EAAA,6DACrB,EAAK8F,SAAU,EADM,kBAGbvD,EAAMC,WAAWQ,OAAO,EAAK4C,iBAAkBhD,IAHlC,OAInBsE,aAAY,WAAO,IAAD,EAChB,EAAKtB,iBAAkB4C,cACrB,UAAC,EAAK5C,wBAAN,aAAC,EAAuB4C,aAC1B,EAAK9C,iBAAiBO,IACpB,EAAKL,iBAAkBhD,GACvB,EAAKgD,qBATU,gDAanByB,QAAQC,IAAR,MAbmB,yBAenBJ,aAAY,kBAAO,EAAKpB,SAAU,KAff,4EAvPT,KA0Qd2C,sBAAwB,WACtB,EAAK7C,sBAAmBZ,GA3QZ,KA8Qd0D,wBAA0B,SAAChF,GACzB,EAAKgC,iBAAiBa,SAAQ,SAACzD,GAC7BA,EAAS0E,UAAUjB,SAAQ,SAACyB,GACtBA,EAAStE,WAAaA,IACxBsE,EAASW,UACJX,EAASY,eAAiB,EAC1BZ,EAASY,eAAiB,EAC/BZ,EAASW,WAAaX,EAASW,kBApRrCE,YAAmBrJ,MAEnBsJ,aACE,kBAAM,EAAKrE,UAAUsE,UACrB,WACE,EAAK/C,aAAe,IAAIvG,EACxB,EAAKiG,iBAAiBsD,QACtB,EAAKrC,oB,6CA2CX,WACE,IAAMjE,EAAS,IAAIuG,gBAWnB,OAVAvG,EAAOqB,OAAO,aAAcvE,KAAKwG,aAAatG,WAAWwJ,YACzDxG,EAAOqB,OAAO,WAAYvE,KAAKwG,aAAarG,SAASuJ,YAErD1J,KAAKiF,UAAU8B,SAAQ,SAACF,EAAOlF,GACzBA,IAAQW,EAAc0E,UACxB9D,EAAOqB,OAAOjC,EAAc0E,UAAYH,EAAe8C,eAEvDzG,EAAOqB,OAAO5C,EAAMkF,EAAkB6C,eAGnCxG,I,4BAET,WACE,OAAO0G,MAAMC,KAAK7J,KAAKkG,iBAAiB4D,UAAUC,MAAK,SAACC,EAAIC,GAC1D,OAAOD,EAAGpE,KAAMsE,UAAYD,EAAGrE,KAAMsE,e,6BAIzC,WACE,OAAO7E,OAAO8E,QACZnK,KAAKoK,iBAAiBC,QAAO,SAAC/C,EAAYhE,GACxC,IAAMsC,EAAO0E,kBAAOhH,EAASsC,KAAO,eAIpC,OAHA0B,EAAW1B,GAAQ0B,EAAW1B,GAAX,sBACX0B,EAAW1B,IADA,CACOtC,IACtB,CAACA,GACEgE,IACN,S,qBGtGYiD,E,WAWnB,aAAe,IAAD,gCAVd3F,QAA0B,KAUZ,KATd4F,gBAA0B,EASZ,KARdC,WAAqB,EAQP,KAPdnE,SAAmB,EAOL,KANdoE,mBAA6B,EAMf,KALdC,WAAwB,GAKV,KAJdrD,WAA6B,GAIf,KAHdsD,mBAAoB,EAGN,KAFdC,UAAY,EAEE,KAgBdC,aAAe,SAACD,GACd,EAAKA,UAAYA,GAjBL,KA2BdE,YA3Bc,uCA2BA,WAAO7G,GAAP,eAAA1D,EAAA,6DACZ,EAAKgK,gBAAiB,EADV,kBAGYzH,EAAMkB,SAASxB,IAAIyB,GAH/B,OAGJU,EAHI,OAIV8C,aAAY,WACV,EAAK9C,QAAUA,KALP,gDAQViD,QAAQC,IAAI,WAAZ,MARU,yBAUVJ,aAAY,WACV,EAAK8C,gBAAiB,KAXd,4EA3BA,2DA2CdrG,YA3Cc,uCA2CA,WAAOC,GAAP,iBAAA5D,EAAA,6DACZ,EAAKiK,WAAY,EADL,kBAGa1H,EAAMkB,SAASE,YAAYC,GAHxC,OAGJtD,EAHI,OAIJkK,EAAQlK,EAAShB,KACvB4H,aAAY,WACS,IAAD,EAAd,EAAK9C,UACP,YAAKA,QAAQqG,cAAb,SAAqBxJ,KAAKuJ,GACtBA,EAAME,QAAUxK,EAAMoB,UAAU8B,OAClClD,EAAMoB,UAAUqJ,SAASH,EAAMxI,KAC/B,EAAKoC,QAAQoB,MAAQgF,EAAMxI,SAVvB,gDAeVqF,QAAQC,IAAR,MAfU,yBAiBVJ,aAAY,kBAAO,EAAK+C,WAAY,KAjB1B,4EA3CA,2DAgEdjG,aAhEc,uCAgEC,WAAOwG,GAAP,SAAAxK,EAAA,6DACb,EAAK8F,SAAU,EADF,kBAGLvD,EAAMkB,SAASO,aAAawG,EAAM5H,IAH7B,OAIXsE,aAAY,WACS,IAAD,EAAd,EAAK9C,UACP,YAAKA,QAAQqG,cAAb,SAAqBlE,SAAQ,SAACiE,GACxBA,EAAME,SACRF,EAAME,QAAS,MAGnBF,EAAME,QAAS,EACf,EAAKtG,QAAQoB,MAAQgF,EAAMxI,IAC3B9B,EAAMoB,UAAUqJ,SAASH,EAAMxI,SAbxB,gDAiBXqF,QAAQC,IAAR,MAjBW,yBAmBXJ,aAAY,WACV,EAAKpB,SAAU,KApBN,4EAhED,2DAyFd5B,YAzFc,uCAyFA,WAAOsG,GAAP,eAAAxK,EAAA,6DACZ,EAAK8F,SAAU,EADH,SAGJ7B,EAAUuG,EAAM5H,GAHZ,SAIJL,EAAMkB,SAASS,YAAYD,GAJvB,OAKViD,aAAY,WACS,IAAD,EAAd,EAAK9C,UACP,EAAKA,QAAQoB,WAAQR,EACrB,EAAKZ,QAAQqG,OAAb,UAAsB,EAAKrG,QAAQqG,cAAnC,aAAsB,EAAqBnC,QACzC,SAACkC,GAAD,OAAWA,EAAM5H,KAAOqB,KAE1B/D,EAAMoB,UAAUqJ,cAAS3F,OAXnB,gDAeVqC,QAAQC,IAAR,MAfU,yBAiBVJ,aAAY,WACV,EAAKpB,SAAU,KAlBP,4EAzFA,2DAgHd3B,cAhHc,uCAgHE,WACdC,GADc,SAAApE,EAAA,6DAGd,EAAK8F,SAAU,EAHD,kBAKNvD,EAAMkB,SAASU,cAAcC,GALvB,OAMZ8C,aAAY,WACV,EAAK9C,QAASC,YAAcD,EAAQC,YACpC,EAAKD,QAASE,IAAMF,EAAQE,KAAO,EAAKF,QAASE,IAEjDpE,EAAMoB,UAAU8B,KAAMiB,YAAcD,EAAQC,YAC5CnE,EAAM0K,cAAclF,iBAAiBa,SAAQ,SAACzD,GAC5CA,EAAS0E,UAAUjB,SAAQ,SAACyB,GACtBA,EAAStE,WAAaU,EAAQV,WAChCsE,EAAS3D,YAAcD,EAAQC,YAC/B2D,EAAS1D,IAAMF,EAAQE,KAAO0D,EAAS1D,cAfnC,gDAqBZ+C,QAAQC,IAAR,MArBY,yBAuBZJ,aAAY,WACV,EAAKpB,SAAU,KAxBL,4EAhHF,2DA6IdvB,gBA7Ic,uCA6II,WAAOb,EAAkBiF,GAAzB,SAAA3I,EAAA,6DAChB,EAAK8F,SAAU,EADC,kBAGRvD,EAAMkB,SAASc,gBAAgBb,GAHvB,OAIdxD,EAAM0K,cAAclC,wBAAwBhF,GAC5CwD,aAAY,WAAO,IAAD,IAEd,EAAK9C,SACL,EAAKA,QAAQV,YAAb,UAA0BxD,EAAMoB,UAAU8B,YAA1C,aAA0B,EAAsBM,WAChD,EAAKU,QAAQV,WAAaA,IAE1BiF,EACK,EAAKvE,QAAQwE,eAAiB,EAC9B,EAAKxE,QAAQwE,eAAiB,EACnC,EAAKxE,QAAQuE,WAAa,EAAKvE,QAAQuE,WAIvC,EAAKvE,SACL,EAAKA,QAAQV,YAAb,UAA0BxD,EAAMoB,UAAU8B,YAA1C,aAA0B,EAAsBM,YAEhDiF,EACK,EAAKvE,QAAQyG,gBAAkB,EAC/B,EAAKzG,QAAQyG,gBAAkB,GAGtC,EAAKV,WAAW5D,SAAQ,SAACnC,GACnBA,EAAQV,WAAaA,IACvBU,EAAQuE,UACHvE,EAAQwE,eAAiB,EACzBxE,EAAQwE,eAAiB,EAC9BxE,EAAQuE,WAAavE,EAAQuE,iBA/BrB,gDAoCdtB,QAAQC,IAAR,MApCc,yBAsCdJ,aAAY,kBAAO,EAAKpB,SAAU,KAtCpB,4EA7IJ,6DAuLdgF,eAvLc,uCAuLG,WAAOrG,GAAP,eAAAzE,EAAA,6DACf,EAAKkK,mBAAoB,EADV,kBAGY3H,EAAMkB,SAASe,eACtC,EAAKJ,QAASV,SACde,GALW,OAGP0F,EAHO,OAObjD,aAAY,WACV,EAAKiD,WAAaA,KARP,gDAWb9C,QAAQC,IAAR,MAXa,yBAabJ,aAAY,kBAAO,EAAKgD,mBAAoB,KAb/B,4EAvLH,2DAwMda,mBAxMc,uCAwMO,WAAOrH,EAAkBe,GAAzB,eAAAzE,EAAA,6DACnB,EAAKoK,mBAAoB,EADN,kBAGQ7H,EAAMkB,SAASiB,eACtChB,EACAe,GALe,OAGXqC,EAHW,OAOjB,EAAKA,WAAaA,EAPD,gDASjBO,QAAQC,IAAR,MATiB,yBAWjBJ,aAAY,kBAAO,EAAKkD,mBAAoB,KAX3B,4EAxMP,wDACZvB,YAAmBrJ,MAEnBsJ,aACE,kBAAM,EAAKuB,aACX,SAACA,GACC,GAAkB,IAAdA,GAAiC,IAAdA,EAAiB,CACtC,IAAM5F,EAA0B,IAAd4F,EAAkB,YAAc,YAClD,EAAKS,eAAerG,QAEpB,EAAK0F,WAAa,M,+CAU1B,WACE,SAAIjK,EAAMoB,UAAU8B,OAAQ5D,KAAK4E,UACxBlE,EAAMoB,UAAU8B,KAAKM,WAAalE,KAAK4E,QAAQV,a,KCjCvCsH,E,WAMnB,aAAe,IAAD,gCALd5H,KAAqB,KAKP,KAJd6H,cAA+B,KAIjB,KAHdC,WAAY,EAGE,KAFdC,yBAEc,OAQdhI,MARc,uCAQN,WAAOiI,GAAP,eAAApL,EAAA,+EAEeuC,EAAMU,QAAQE,MAAMiI,GAFnC,OAEEhI,EAFF,OAGJ8D,aAAY,WACVhH,EAAMC,YAAYkL,SAASjI,EAAKnD,OAChC,EAAKmD,KAAOA,EACZ,EAAKkI,uBAAuBlI,GAC5BpC,GAAQC,KAAK,kBAPX,oHARM,2DAsBdM,OAAS,WACPrB,EAAMC,YAAYkL,SAAS,MAC3B,EAAKjI,KAAO,KACZpC,GAAQC,KAAK,MAzBD,KA4BdsK,cAAgB,WACd,EAAKL,WAAY,EAEjB,IAAMM,EAAW,SAACjI,GAChBhB,EAAMU,QAAQK,QAAQC,GACnBrB,MAAK,SAACkB,GACLlD,EAAMC,YAAYkL,SAASjI,EAAKnD,OAChC,EAAKqL,uBAAuBlI,GAC5B8D,aAAY,WACV,EAAK9D,KAAOA,EACZ,EAAK8H,WAAY,KAEnBlK,GAAQC,KAAK,kBAEdwK,OAAM,SAAChL,GACN,EAAKyK,WAAY,MAInB,EAAKD,cACPO,EAAS,EAAKP,eAEdS,OAAOC,GAAGxI,OACR,SAAC7C,GACCkL,EAASlL,EAASsL,aAAarI,eAEjC,CAAEsI,MAAO,0BAtDD,KA2DdC,uBA3Dc,sBA2DW,sBAAA9L,EAAA,sDACvB0L,OAAOC,GAAGI,gBAAe,SAACzL,GACA,cAApBA,EAASI,SACX,EAAKuK,cAAgB3K,EAASsL,aAAarI,gBAHxB,2CA3DX,KAmEdyI,QAnEc,sBAmEJ,4BAAAhM,EAAA,+EAEauC,EAAMU,QAAQC,UAF3B,OAEAE,EAFA,OAGN,EAAKkI,uBAAuBlI,GAC5B8D,aAAY,WACN9D,IACF,EAAKA,KAAOA,MANV,gDAUNiE,QAAQC,IAAI,WAAZ,MAVM,yDAnEI,KAiFdjE,SAjFc,uCAiFH,WAAO+H,GAAP,eAAApL,EAAA,+EAEYuC,EAAMU,QAAQI,SAAS+H,GAFnC,OAEDhI,EAFC,OAGPlD,EAAMC,YAAYkL,SAASjI,EAAKnD,OAChC,EAAKqL,uBAAuBlI,GAC5B8D,aAAY,WACVhH,EAAMC,YAAYkL,SAASjI,EAAKnD,OAChC,EAAKmD,KAAOA,EACZlD,EAAM+L,WAAWC,aACjBlL,GAAQC,KAAK,kBATR,oHAjFG,2DAiGd0J,SAAW,SAACnF,GACN,EAAKpC,OACP,EAAKA,KAAKoC,MAAQA,IAnGR,KAuGdhC,aAvGc,sBAuGC,4BAAAxD,EAAA,6DACb,EAAKmM,wBADQ,kBAGQ5J,EAAMU,QAAQO,eAHtB,OAGLJ,EAHK,OAIX8D,aAAY,kBAAO,EAAK9D,KAAOA,KAC/BlD,EAAMC,YAAYkL,SAASjI,EAAKnD,OAChC,EAAKqL,uBAAuBlI,GANjB,kDAQXiE,QAAQC,IAAR,MARW,0DAtGbuB,YAAmBrJ,M,4CAGrB,WACE,QAASA,KAAK4D,O,oCA8GhB,SAA+BA,GAC7B,IAAMgJ,EAAW7L,KAAKC,MAAM6L,KAAKjJ,EAAKnD,MAAMqM,MAAM,KAAK,KAIjDC,EAFQ,IAAItF,KAAoB,IAAfmF,EAASI,KAER9C,UAAYzC,KAAKwF,MAAQ,IAEjDjN,KAAK2L,oBAAsBuB,WAAWlN,KAAKgE,aAAc+I,K,mCAG3D,WACEI,aAAanN,KAAK2L,yB,KCzHTjL,EAAgB,CAC3B0K,cAAe,IAAInF,EACnBtF,YAAa,ICXb,aAAe,IAAD,gCAJdM,WAIc,OAHdR,MAAuByL,OAAOkB,aAAaC,QAAQ,OAGrC,KAFdC,WAAqB,EAEP,KAedtL,eAAiB,SAACf,GAChB,EAAKA,MAAQA,GAhBD,KAmBd4K,SAAW,SAACpL,GACV,EAAKA,MAAQA,GApBD,KAuBd8M,aAAe,WACb,EAAKD,WAAY,GAvBjBjE,YAAmBrJ,MAEnBsJ,aACE,kBAAM,EAAK7I,SACX,SAACA,GACKA,EACF2M,aAAaI,QAAQ,MAAO/M,GAE5B2M,aAAaK,WAAW,WDGhC3L,UAAW,IAAI0J,EACfiB,WAAY,IERZ,aAAe,IAAD,gCALdiB,MAAgB,CACdC,MAAM,EACNhL,KAAM,MAGM,KAIdiL,UAAY,SAACC,GACX,EAAKH,MAAMC,MAAO,EAClB,EAAKD,MAAM/K,KAAOkL,GANN,KASdnB,WAAa,WACX,EAAKgB,MAAMC,MAAO,EAClB,EAAKD,MAAM/K,KAAO,MAVlB0G,YAAmBrJ,OFQrB8N,aAAc,IAAIvD,EAClBwD,aAAc,IGVd,aAAe,IAAD,gCAHdC,SAA0B,GAGZ,KAFdC,cAAsC,KAExB,KAIdC,oBAAsB,SAACC,GACjBzN,EAAM0K,cAAchF,mBACtB,EAAK6H,eAAgB,IAAIG,KACtBC,QADkB,UACPhM,QADO,uBACsC8L,GAAc,CACrEG,mBAAoB,kBAAM5N,EAAMoB,UAAU8B,KAAMnD,SAEjD8N,yBACAC,iBAAiBC,IAASC,aAC1BC,QAEH,EAAKV,cAAcW,QAAQ3C,OAAM,SAAChL,GAChC4G,QAAQC,IAAI,sBAAuB7G,MAGrC,EAAKgN,cAAcY,GAAG,gBAAgB,SAACb,GACrCtG,aAAY,WACV,EAAKsG,SAAWA,EAASzG,KAAI,SAACuH,GAAD,mBAAC,eACzBA,GADwB,IAE3BC,UAAW,IAAItH,KAAJ,UAAYqH,EAAQC,UAApB,iBAKjB,EAAKd,cAAcY,GAAG,kBAAkB,SAACC,GACvCpH,aAAY,WACV,EAAKsG,SAASgB,QAAd,2BACKF,GADL,IAEEC,UAAW,IAAItH,KAAKqH,EAAQC,sBA/BxB,KAsCdE,kBAAoB,WAAO,IAAD,EACxB,YAAKhB,qBAAL,SAAoBiB,OAAOjD,OAAM,SAAChL,GAChC4G,QAAQC,IAAI,iCAAkC7G,OAxCpC,KA4CdkO,cAAgB,WACd,EAAKnB,SAAW,GAChB,EAAKiB,qBA9CO,KAiDdG,WAjDc,uCAiDD,WAAOtF,GAAP,iBAAAtJ,EAAA,6DACXsJ,EAAOqE,WAAP,UAAoBzN,EAAM0K,cAAchF,wBAAxC,aAAoB,EAAsChD,GAD/C,4BAGH,EAAK6K,qBAHF,aAGH,EAAoBoB,OAAO,cAAevF,GAHvC,sDAKTjC,QAAQC,IAAR,MALS,wDAjDC,sDACZuB,YAAmBrJ,QHYVsP,EAAeC,wBAAc7O,GAE7B8O,EAAW,WACtB,OAAOC,qBAAWH,I,OIqBLI,eA5CA,WACb,MAEIF,IADF1N,UAAa8B,EADf,EACeA,KAAM7B,EADrB,EACqBA,OAErB,OACE,cAAC4N,EAAA,EAAD,CAAMC,UAAQ,EAACC,MAAM,MAArB,SACE,eAACC,EAAA,EAAD,WACE,eAACH,EAAA,EAAKI,KAAN,CAAWC,QAAM,EAACC,GAAIC,IAASC,GAAI,IAAKC,OAAK,EAA7C,UACE,qBAAKC,IAAI,mBAAmBC,IAAI,OAAOC,MAAO,CAAEC,YAAa,MAD/D,kBAIA,cAACb,EAAA,EAAKI,KAAN,CAAWU,KAAK,aAAaR,GAAIC,IAASC,GAAI,gBAC9C,cAACR,EAAA,EAAKI,KAAN,CAAWU,KAAK,SAASR,GAAIC,IAASC,GAAI,YAC1C,cAACR,EAAA,EAAKI,KAAN,UACE,cAACW,EAAA,EAAD,CACEC,UAAQ,EACR9C,QAAQ,kBACRoC,GAAIC,IACJC,GAAG,sBAGP,eAACR,EAAA,EAAKI,KAAN,CAAWa,SAAS,QAApB,UACE,cAACC,EAAA,EAAD,CACER,KAAS,OAAJzM,QAAI,IAAJA,OAAA,EAAAA,EAAMoC,QAAS,mBACpB8K,QAAM,EACNC,OAAO,UAET,cAACC,EAAA,EAAD,CAAUC,SAAS,WAAWC,KAAI,OAAEtN,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,YAA1C,SACE,eAACmM,EAAA,EAASrB,KAAV,WACE,cAACqB,EAAA,EAASjB,KAAV,CACEE,GAAIkB,IACJhB,GAAE,2BAAevM,QAAf,IAAeA,OAAf,EAAeA,EAAMM,UACvBgN,KAAK,aACLE,KAAK,SAEP,cAACJ,EAAA,EAASjB,KAAV,CAAesB,QAAStP,EAAQmP,KAAK,SAASE,KAAK,0B,yECClDE,GAnCS5B,aAAS,WAC/B,MAEIF,IADFpE,cAAiBnG,EADnB,EACmBA,UAAW2B,EAD9B,EAC8BA,aAE9B,OACE,qCACE,eAAC+I,EAAA,EAAD,CAAM4B,UAAQ,EAACC,KAAK,QAAQjB,MAAO,CAAEkB,MAAO,OAAQC,UAAW,IAA/D,UACE,cAACC,GAAA,EAAD,CAAQP,KAAK,SAASQ,UAAQ,EAACC,MAAM,OAAOhE,QAAQ,YACpD,cAAC8B,EAAA,EAAKI,KAAN,CACElC,QAAQ,iBACRiE,OAAQ7M,EAAU8M,IAAIzP,EAAcoE,KACpC2K,QAAS,kBAAMzK,EAAatE,EAAcoE,KAAK,MAEjD,cAACiJ,EAAA,EAAKI,KAAN,CACElC,QAAQ,YACRiE,OAAQ7M,EAAU8M,IAAIzP,EAAc2E,SACpCoK,QAAS,kBAAMzK,EAAatE,EAAc2E,SAAS,MAErD,cAAC0I,EAAA,EAAKI,KAAN,CACElC,QAAQ,cACRiE,OAAQ7M,EAAU8M,IAAIzP,EAAc4E,QACpCmK,QAAS,kBAAMzK,EAAatE,EAAc4E,QAAQ,SAGtD,cAACyK,GAAA,EAAD,IACA,cAAC,KAAD,CACEK,SAAU,SAACpM,GACTgB,EAAatE,EAAc0E,UAAWpB,IAExCiB,MAAQ5B,EAAUxC,IAAIH,EAAc0E,YAAuB,IAAIS,a,oBCjCxD,SAASwK,KACtB,OACE,cAAC,WAAD,UACE,cAACC,GAAA,EAAD,CAAaC,OAAK,EAAC5B,MAAO,CAAEmB,UAAW,IAAvC,SACE,eAACU,GAAA,EAAQC,MAAT,WACE,cAACD,GAAA,EAAD,CAAS7B,MAAO,CAAE+B,UAAW,KAA7B,SACE,eAACJ,GAAA,EAAD,WACE,eAACA,GAAA,EAAYP,OAAb,CAAoB3L,OAAK,EAAzB,UACE,cAACkM,GAAA,EAAYK,KAAb,IACA,cAACL,GAAA,EAAYK,KAAb,OAEF,cAACL,GAAA,EAAYM,UAAb,UACE,cAACN,GAAA,EAAYK,KAAb,WAIN,cAACH,GAAA,EAAD,UACE,eAACF,GAAA,EAAD,WACE,cAACA,GAAA,EAAYK,KAAb,IACA,cAACL,GAAA,EAAYK,KAAb,SAGJ,cAACH,GAAA,EAAD,CAASK,WAAS,EAAClC,MAAO,CAAE+B,UAAW,MACvC,cAACF,GAAA,EAAD,CAASM,UAAQ,EAAjB,SACE,cAAChC,EAAA,EAAD,CAAQiC,UAAQ,EAACd,MAAM,OAAOe,QAAQ,QAAQ/E,QAAQ,kB,+DCjBnD6B,gBAAS,YAA4C,IAAD,EAAnB9K,EAAmB,EAAnBA,QAC9C,EAAoC4K,IAA5B1B,EAAR,EAAQA,aAAchM,EAAtB,EAAsBA,UACdwE,EAA6BwH,EAA7BxH,QAASvB,EAAoB+I,EAApB/I,gBASjB,OAAI,UAAAjD,EAAU8B,YAAV,eAAgBM,YAAaU,EAAQV,SAChC,KAIP,eAAC2O,GAAA,EAAD,CAAQC,SAAS,OAAjB,UACE,cAACD,GAAA,EAAOE,QAAR,CAAgBC,SAAO,EAACzC,MAAO,CAAEkB,MAAO,QAAxC,SACE,cAACf,EAAA,EAAD,CACEyB,OAAK,EACLN,MAAM,OACNhE,QAASjJ,EAAQuE,UAAY,YAAc,oBAG/C,cAAC0J,GAAA,EAAOE,QAAR,CAAgBE,QAAM,EAAC1C,MAAO,CAAEkB,MAAO,QAAvC,SACE,cAACf,EAAA,EAAD,CACEyB,OAAK,EACLe,OAAK,EACLrB,MAAOjN,EAAQuE,UAAY,MAAQ,QACnC0E,QAASjJ,EAAQuE,UAAY,WAAa,YAC1C7C,QAASA,EACT+K,QAAS,SAAC8B,GAAD,OA3BI,SAACA,EAAmBjP,GACvCiP,EAAEC,iBACFxO,EAAQuE,UACJpE,EAAgBb,GAAU,GAC1Ba,EAAgBb,GAAU,GAuBRmP,CAAaF,EAAGvO,EAAQV,qBC9B5CoP,GAAiB,SAACC,EAAoBrC,GAC1C,IAAKA,EACH,OAAO,KAGT,GAAIqC,GAAcrC,EAAKsC,OACrB,OAAOtC,EAET,IAAMuC,EAAQvC,EAAKpE,MAAM,KAErB4G,EAAU,GAOd,OALAD,EAAM1M,SAAQ,SAAC4M,GACTD,EAAQF,OAASG,EAAKH,QAAUD,IAClCG,GAAWC,EAAO,QAGfD,EAAU,OAGJhE,gBAAS,YAA2C,IAApB9K,EAAmB,EAAnBA,QAC7C,OACE,eAACgP,GAAA,EAAD,CAAM3D,GAAIkB,IAAMhB,GAAE,oBAAevL,EAAQV,UAAzC,UACE,cAAC2M,EAAA,EAAD,CAAOR,IAAKzL,EAAQoB,OAAS,qBAC7B,eAAC4N,GAAA,EAAKb,QAAN,WACE,cAACa,GAAA,EAAKjC,OAAN,UAAc/M,EAAQC,cACtB,cAAC+O,GAAA,EAAKC,YAAN,UAAmBP,GAAe,GAAI1O,EAAQE,UAEhD,eAAC8O,GAAA,EAAKb,QAAN,WACE,cAACe,GAAA,EAAD,CAAMrD,KAAK,SACV7L,EAAQwE,cAFX,gBAIA,cAAC,GAAD,CAAcxE,QAASA,UChCd8K,gBAAS,YAEZ,IADV1H,EACS,EADTA,UAEM+L,EAAS,CACbC,YAAa,SACbC,YAAa,OAEf,OACE,cAACC,EAAA,EAAD,CAAMC,YAAU,EAAhB,SACGnM,EAAUT,KAAI,SAACiB,GAAD,OACb,cAAC4L,GAAA,EAAD,CACEC,WAAS,EAETC,QACE,cAACJ,EAAA,EAAKnE,KAAN,CAEEE,GAAIkB,IACJhB,GAAE,oBAAe3H,EAAStE,UAH5B,SAKE,cAAC2M,EAAA,EAAD,CACEW,KAAK,OACL+C,UAAQ,EACRlE,IAAK7H,EAASxC,OAAS,mBACvBwO,UAAQ,EACRjE,MAAO/H,EAASW,UAAY4K,EAAS,MATlCvL,EAAStE,UALpB,SAmBE,cAACkQ,GAAA,EAAMrB,QAAP,UACE,cAAC,GAAD,CAAanO,QAAS4D,OAlBnBA,EAAStE,kBC8DTuQ,OA1Ef,YAAiD,IAAD,MAApBnR,EAAoB,EAApBA,SAE1B,OACE,eAAC8O,GAAA,EAAQC,MAAT,WACE,eAACD,GAAA,EAAD,WACG9O,EAAS0F,aACR,cAAC0L,GAAA,EAAD,CACE9C,SAAS,MACTC,MAAM,MACNhE,QAAQ,YACR0C,MAAO,CAAEoE,UAAW,YAGxB,cAAC5E,GAAA,EAAKsC,MAAN,UACE,eAACtC,GAAA,EAAD,WACE,cAACA,GAAA,EAAKc,MAAN,CACEN,MAAO,CAAEqE,aAAc,GACvBpD,KAAK,OACL+C,UAAQ,EACRlE,KAAK,UAAA/M,EAAS6E,YAAT,eAAenC,QAAS,qBAE/B,eAAC+J,GAAA,EAAKgD,QAAN,WACE,cAAChD,GAAA,EAAK4B,OAAN,CAAa1B,GAAIkB,IAAMhB,GAAE,sBAAiB7M,EAASF,IAAnD,SACGE,EAASmC,QAEZ,eAACsK,GAAA,EAAK8D,YAAN,uBACY,IACV,cAAC,IAAD,CAAM1D,GAAE,8BAAe7M,EAAS6E,YAAxB,aAAe,EAAejE,UAAtC,mBACGZ,EAAS6E,YADZ,aACG,EAAetD,iBAGnBvB,EAAS4D,QACR,cAAC6I,GAAA,EAAK8D,YAAN,UACE,cAACa,GAAA,EAAD,CAAOxB,OAAK,EAACrB,MAAM,SAAnB,8CAKHvO,EAAS2D,UAAY3D,EAAS4D,QAC7B,cAAC6I,GAAA,EAAK8D,YAAN,UACE,cAACa,GAAA,EAAD,CAAOxB,OAAK,EAACrB,MAAM,QAAnB,0DASZ,cAACO,GAAA,EAAD,UACE,iCACE,cAAC0B,GAAA,EAAD,CAAMrD,KAAK,UACVnG,kBAAOhH,EAASsC,KAAO,sBACxB,cAACkO,GAAA,EAAD,CAAMrD,KAAK,WACVnN,EAASwC,WAGd,cAACsM,GAAA,EAAD,CAASK,WAAS,EAAlB,SACE,cAAC,GAAD,CAA0BzK,UAAW1E,EAAS0E,WAAa,OAE7D,eAACoK,GAAA,EAAD,CAASM,UAAQ,EAAjB,UACE,+BAAOpP,EAASqC,cAChB,cAAC+K,EAAA,EAAD,CACET,GAAIkB,IACJhB,GAAE,sBAAiB7M,EAASF,IAC5ByO,MAAM,OACNe,QAAQ,QACR/E,QAAQ,gBChDH6B,gBAxBM,WACnB,IACmBmF,EACfrF,IADFpE,cAAiByJ,kBAGnB,OACE,mCACGA,EAAkBtN,KAAI,YAA0B,IAAD,mBAAvBuN,EAAuB,KAAhBxN,EAAgB,KAC9C,OACE,eAAC,WAAD,WACE,cAACqK,GAAA,EAAD,CAAQoD,KAAG,EAAClD,MAAM,OAAlB,SACGiD,IAGFxN,EAAWC,KAAI,SAACjE,GAAD,OACd,cAAC,GAAD,CAAoCA,SAAUA,GAAvBA,EAASF,SANrB0R,WCyDVpF,gBA9DW,WACxB,MAQIF,IAPFpE,cACEjE,EAFJ,EAEIA,eACAZ,EAHJ,EAGIA,eACAL,EAJJ,EAIIA,iBACAnG,EALJ,EAKIA,WACA4G,EANJ,EAMIA,gBAIJ,EAAsCqO,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAgBA,OANAC,qBAAU,WACJjP,EAAiBsL,MAAQ,GAC3BrK,MAED,CAACA,EAAgBjB,EAAiBsL,OAGnC,eAAC4D,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,SACE,cAACyC,EAAA,EAAD,UACG3N,IAAmB0O,EAClB,qCACE,cAAChD,GAAD,IACA,cAACA,GAAD,OAGF,cAAC,IAAD,CACEqD,UAAW,EACXC,SA1BU,WACpBL,GAAe,GACfvO,EAAgB,IAAI1G,EAAaF,EAAYyV,YAAc,IAC3DrO,IAAiBzE,MAAK,WACpBwS,GAAe,OAuBPO,SACGR,KACClV,GACFA,EAAWyV,YAAczV,EAAW2V,WAEtCC,aAAa,EARf,SAUE,cAAC,GAAD,UAKR,cAACP,EAAA,EAAKC,OAAN,CAAa5D,MAAO,EAApB,SACE,cAAC,GAAD,MAEF,cAAC2D,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,SACE,cAACmE,EAAA,EAAD,CAAQ9D,OAAQmD,Y,uCCvDT,SAASY,GAAYC,GAClC,MAAsBC,aAASD,EAAMrF,MAArC,mBAAOuF,EAAP,KAAcC,EAAd,KACA,OACE,eAACC,GAAA,EAAKC,MAAN,CAAYlV,QAASgV,EAAKhV,OAASgV,EAAKG,QAAxC,UACE,gCAAQN,EAAMO,QACd,cAACC,GAAA,EAAD,uCAAWN,GAAWF,GAAtB,IAA6B3D,OAAK,KACjC8D,EAAKG,SAAWH,EAAKhV,MACpB,cAACyT,GAAA,EAAD,CAAOxB,OAAK,EAACrB,MAAM,MAAnB,SACGoE,EAAKhV,QAEN,QCdKyO,oBAAS,WACtB,MAAkCF,IAA1B1N,EAAR,EAAQA,UAAW2K,EAAnB,EAAmBA,WAEnB,OACE,cAAC,KAAD,CACErH,cAAe,CAAEmR,MAAO,GAAIC,SAAU,GAAIvV,MAAO,MACjDwV,SAAU,SAAC3M,EAAD,GAA4B,IAAjB4M,EAAgB,EAAhBA,UACnB,OAAO5U,EACJ6B,MAAMmG,GACNpH,MAAK,WACJ+J,EAAWC,gBAEZT,OAAM,SAAChL,GACNyV,EAAU,CAAEzV,MAAO,kCAT3B,SAaG,gBAAG0V,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAActV,EAA/B,EAA+BA,OAA/B,OACC,eAAC,KAAD,CAAMuV,UAAU,UAAUJ,SAAUE,EAAcG,aAAa,MAA/D,UACE,cAACnF,GAAA,EAAD,CACE1B,GAAG,KACHpC,QAAQ,wBACRgE,MAAM,OACN8C,UAAU,WAEZ,cAACkB,GAAD,CAAapF,KAAK,QAAQsG,YAAY,UACtC,cAAClB,GAAD,CAAapF,KAAK,WAAWsG,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACEvG,KAAK,QACLwG,OAAQ,kBACN,cAACvC,GAAA,EAAD,CACEnE,MAAO,CAAEqE,aAAc,IACvB1B,OAAK,EACLrB,MAAM,MACNhE,QAASvM,EAAOL,WAItB,cAACyP,EAAA,EAAD,CACEpK,QAASsQ,EACTjG,UAAQ,EACR9C,QAAQ,QACRmJ,KAAK,SACL7E,OAAK,a,mBC3CF,SAAS+E,GAAT,GAA+C,IAAnB5V,EAAkB,EAAlBA,OACzC,OACE,cAAC6V,GAAA,EAAD,CAASlW,OAAK,EAAd,SACGK,GACC,cAAC6V,GAAA,EAAQjD,KAAT,UACG5S,EAAOiG,KAAI,SAAC6P,EAAKC,GAAN,OACV,cAACF,GAAA,EAAQpH,KAAT,UAAyBqH,GAANC,UCJhB3H,oBAAS,WACtB,MAAkCF,IAA1B1N,EAAR,EAAQA,UAAW2K,EAAnB,EAAmBA,WAEnB,OACE,cAAC,KAAD,CACErH,cAAe,CACbmR,MAAO,GACPC,SAAU,GACV3R,YAAa,GACbX,SAAU,GACVjD,MAAO,MAETqW,iBAAkBC,KAAW,CAC3B1S,YAAa0S,OAAaC,WAC1BtT,SAAUqT,OAAaC,WACvBjB,MAAOgB,OAAahB,QAAQiB,WAC5BhB,SAAUe,OAAaC,aAEzBf,SAAU,SAAC3M,EAAD,GAA4B,IAAjB4M,EAAgB,EAAhBA,UACnB,OAAO5U,EACJ+B,SAASiG,GACTpH,MAAK,WACJ+J,EAAWC,gBAEZT,OAAM,SAAC3K,GACNuG,QAAQC,IAAI,WAAYxG,GACxBoV,EAAU,CAAEzV,MAAOK,EAAOmW,KAAK,YAtBvC,SA0BG,gBAAGd,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAActV,EAA/B,EAA+BA,OAAQoW,EAAvC,EAAuCA,QAASC,EAAhD,EAAgDA,MAAhD,OACC,eAAC,KAAD,CACEd,UAAU,gBACVJ,SAAUE,EACVG,aAAa,MAHf,UAKE,cAACnF,GAAA,EAAD,CACE1B,GAAG,KACHpC,QAAQ,0BACRgE,MAAM,OACN8C,UAAU,WAEZ,cAACkB,GAAD,CAAapF,KAAK,WAAWsG,YAAY,aACzC,cAAClB,GAAD,CAAapF,KAAK,cAAcsG,YAAY,iBAC5C,cAAClB,GAAD,CAAapF,KAAK,QAAQsG,YAAY,UACtC,cAAClB,GAAD,CAAapF,KAAK,WAAWsG,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACEvG,KAAK,QACLwG,OAAQ,wBACN,cAACC,GAAD,CAAkB5V,QAAQ,UAAAA,EAAOL,aAAP,eAAc6L,MAAM,QAAS,QAG3D,cAAC4D,EAAA,EAAD,CACEpK,QAASsQ,EACTjE,UAAW+E,IAAYC,GAASf,EAChCjG,UAAQ,EACR9C,QAAQ,WACRmJ,KAAK,SACL7E,OAAK,aCUFzC,gBA9DE,WACf,MAAkCF,IAA1B1N,EAAR,EAAQA,UAAW2K,EAAnB,EAAmBA,WAEnB,OACE,cAAC2F,GAAA,EAAD,CAASxC,UAAQ,EAAC+E,UAAU,SAASpD,UAAQ,EAACsF,UAAU,WAAxD,SACE,eAAC/G,EAAA,EAAD,CAAWoB,MAAI,EAAf,UACE,eAACS,GAAA,EAAD,CAAQ1B,GAAG,KAAKL,UAAQ,EAAxB,UACE,cAACiB,EAAA,EAAD,CACEW,KAAK,UACLnB,IAAI,mBACJC,IAAI,OACJC,MAAO,CAAEqE,aAAc,MAL3B,kBASC9S,EAAU8V,WACT,qCACE,cAACjG,GAAA,EAAD,CAAQ1B,GAAG,KAAKL,UAAQ,EAAC/B,QAAQ,4BACjC,cAAC6C,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAG,cAAcqB,KAAK,OAAO5B,UAAQ,EAAvD,iCAKF,qCACE,cAAC+B,GAAA,EAAD,CAAQ1B,GAAG,KAAKL,UAAQ,EAAC/B,QAAQ,4BACjC,cAAC6C,EAAA,EAAD,CACEc,KAAK,OACL5B,UAAQ,EACRyB,QAAS,WACP5E,EAAWmB,UAAU,cAAC,GAAD,MAJzB,mBAUA,cAAC8C,EAAA,EAAD,CACEc,KAAK,OACL5B,UAAQ,EACRyB,QAAS,WACP5E,EAAWmB,UAAU,cAAC,GAAD,MAJzB,sBASA,cAACiK,GAAA,EAAD,CAAS1D,YAAU,EAACvE,UAAQ,EAA5B,gBAGA,cAACc,EAAA,EAAD,CACEc,KAAK,OACL5B,UAAQ,EACRiC,MAAM,WACNhE,QAAQ,sBACRvH,QAASxE,EAAU4J,UACnB2F,QAASvP,EAAUiK,2B,UC5DlB,SAAS+L,GAAT,GAGH,IAAD,IAFTlI,gBAES,aADT/B,eACS,MADC,aACD,EACT,OACE,cAACkK,GAAA,EAAD,CAAQjG,QAAQ,EAAMlC,SAAUA,EAAhC,SACE,cAACgG,EAAA,EAAD,CAAQ/H,QAASA,M,cCFR,SAASmK,GAAWlC,GACjC,MAAsBC,aAASD,EAAMrF,MAArC,mBAAOuF,EAAP,KAAcC,EAAd,KACA,OACE,eAACC,GAAA,EAAKC,MAAN,CAAYlV,QAASgV,EAAKhV,OAASgV,EAAKG,QAAxC,UACE,gCAAQN,EAAMO,QACd,oDAAcL,GAAWF,IACxBG,EAAKG,SAAWH,EAAKhV,MACpB,cAACyT,GAAA,EAAD,CAAOxB,OAAK,EAACrB,MAAM,MAAnB,SACGoE,EAAKhV,QAEN,Q,cCXK,SAASgX,GAAcnC,GACpC,MAA+BC,aAASD,EAAMrF,MAA9C,mBAAOuF,EAAP,KAAcC,EAAd,KAAoBiC,EAApB,KACA,OACE,eAAChC,GAAA,EAAKC,MAAN,CAAYlV,QAASgV,EAAKhV,OAASgV,EAAKG,QAAxC,UACE,gCAAQN,EAAMO,QACd,cAAC8B,GAAA,EAAD,CACEC,WAAS,EACTC,QAASvC,EAAMuC,QACfxR,MAAOmP,EAAMnP,OAAS,KACtBmL,SAAU,SAACmB,EAAGrT,GACZoY,EAAQI,SAASxY,EAAK+G,QAExB0R,OAAQ,WACNL,EAAQM,YAAW,IAErBzB,YAAajB,EAAMiB,cAEpBd,EAAKG,SAAWH,EAAKhV,MACpB,cAACyT,GAAA,EAAD,CAAOxB,OAAK,EAACrB,MAAM,MAAnB,SACGoE,EAAKhV,QAEN,QChCH,IAAMwX,GAAkB,CAC7B,CAAEvH,KAAM,SAAUrK,MAAO,UACzB,CAAEqK,KAAM,UAAWrK,MAAO,WAC1B,CAAEqK,KAAM,OAAQrK,MAAO,QACvB,CAAEqK,KAAM,OAAQrK,MAAO,QACvB,CAAEqK,KAAM,QAASrK,MAAO,SACxB,CAAEqK,KAAM,SAAUrK,MAAO,W,qBCKZ,SAAS6R,GAAY5C,GAClC,MAA+BC,aAASD,EAAMrF,MAA9C,mBAAOuF,EAAP,KAAcC,EAAd,KAAoBiC,EAApB,KACA,OACE,eAAChC,GAAA,EAAKC,MAAN,CAAYlV,QAASgV,EAAKhV,OAASgV,EAAKG,QAAxC,UACE,cAAC,KAAD,uCACMJ,GACAF,GAFN,IAGE6C,SAAU3C,EAAMnP,MAAQ,IAAIY,KAAKuO,EAAMnP,OAAS,KAChDmL,SAAU,SAACnL,GAAD,OAAWqR,EAAQI,SAASzR,OAEvCoP,EAAKG,SAAWH,EAAKhV,MACpB,cAACyT,GAAA,EAAD,CAAOxB,OAAK,EAACrB,MAAM,MAAnB,SACGoE,EAAKhV,QAEN,QCRV,IA+GeyO,gBA/GM,WACnB,IAAQtM,EAAOwV,cAAPxV,GACA3B,EAASoX,cAATpX,KACR,EAQI+N,IAPFpE,cACE9E,EAFJ,EAEIA,QACAC,EAHJ,EAGIA,eACAgC,EAJJ,EAIIA,eACAG,EALJ,EAKIA,eACAL,EANJ,EAMIA,aAIJ,EAA4B2M,mBAC1B,IAAIzP,GADN,mBAAOuE,EAAP,KAAegP,EAAf,KAIA3D,qBAAU,WACJ/R,GACFiF,EAAajF,GAAIV,MAAK,SAACY,GACrBwV,EAAU,IAAIvT,EAAmBjC,SAGpC,CAACF,EAAIiF,IAER,IAAM0Q,EAAgB,uCAAG,WAAOjP,GAAP,eAAAtJ,EAAA,kEACnBsJ,QADmB,IACnBA,OADmB,EACnBA,EAAQ1G,IADW,gCAEfsF,EAAeoB,GAFA,OAGrBrI,EAAK,eAAD,OAAgBqI,EAAO1G,KAHN,8BAKjBA,EAAK4V,eALY,SAMfzQ,EAAe,2BAAKuB,GAAN,IAAc1G,QANb,OAOrB3B,EAAK,eAAD,OAAgB2B,IAPC,4CAAH,sDAWhBkU,EAAmBC,KAAW,CAClC9R,MAAO8R,OAAaC,SAAS,+BAC7B7R,YAAa4R,OAAaC,SAAS,qCACnC9R,SAAU6R,OAAaC,WACvB5R,KAAM2R,OAAaC,SAAS,qBAAqByB,WACjDnT,MAAOyR,OAAaC,WACpB3R,KAAM0R,OAAaC,aAGrB,OAAIjR,GAAkBnD,EACb,cAAC0U,GAAD,CAAkBjK,QAAQ,wBAIjC,eAACuE,GAAA,EAAD,CAASM,UAAQ,EAAjB,UACE,cAACf,GAAA,EAAD,CAAQ9D,QAAQ,mBAAmBkH,KAAG,EAAClD,MAAM,SAC7C,cAAC,KAAD,CACEqH,oBAAkB,EAClB9T,cAAe0E,EACf2M,SAAU,SAAC3M,GAAD,OAAgCiP,EAAiBjP,IAC3DwN,iBAAkBA,EAJpB,SAMG,cACCxN,OADD,EAECqP,aAFD,IAGCxC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAc,EALD,EAKCA,QACAC,EAND,EAMCA,MAND,OAQC,eAAC,KAAD,CACEd,UAAU,UACVC,aAAa,QACbL,SAAUE,EAHZ,UAKE,cAACd,GAAD,CAAapF,KAAK,QAAQsG,YAAY,UACtC,cAACiB,GAAD,CAAYoB,KAAM,EAAGrC,YAAY,cAActG,KAAK,gBACpD,cAACwH,GAAD,CACEI,QAASI,GACT1B,YAAY,WACZtG,KAAK,aAEP,cAACiI,GAAD,CACEW,gBAAgB,OAChB5I,KAAK,OACL6I,gBAAc,EACdC,YAAY,OACZC,WAAW,yBAEb,cAAC7H,GAAA,EAAD,CAAQ9D,QAAQ,mBAAmBkH,KAAG,EAAClD,MAAM,SAC7C,cAACgE,GAAD,CAAakB,YAAY,OAAOtG,KAAK,SACrC,cAACoF,GAAD,CAAakB,YAAY,QAAQtG,KAAK,UACtC,cAACC,EAAA,EAAD,CACEkC,QAAQ,QACRoE,KAAK,SACLnJ,QAAQ,SACR8C,UAAQ,EACRrK,QAASA,EACTqM,SAAUiE,IAAiBe,IAAUD,IAEvC,cAAChH,EAAA,EAAD,CACEkC,QAAQ,QACRoE,KAAK,SACLnJ,QAAQ,SACR8E,SAAUrM,EACV2J,GAAIkB,IACJhB,GAAI/M,EAAE,sBAAkBA,GAAO,2B,oBC1G9BsM,gBAAS,YAAuD,IAAvBvB,EAAsB,EAAtBA,WAC9CJ,EAAiByB,IAAjBzB,aAWR,OATAoH,qBAAU,WAIR,OAHIhH,GACFJ,EAAaG,oBAAoBC,GAE5B,WACLJ,EAAaoB,mBAEd,CAACpB,EAAcI,IAGhB,qCACE,cAACiE,GAAA,EAAD,CACEuC,UAAU,SACV/C,SAAS,MACThC,UAAQ,EACRiC,MAAM,OACNtB,MAAO,CAAEkJ,OAAQ,QALnB,SAOE,cAAC9H,GAAA,EAAD,sCAEF,eAACS,GAAA,EAAD,CAASR,UAAQ,EAACc,UAAQ,EAA1B,UACE,cAAC,KAAD,CACEtN,cAAe,CAAEzC,KAAM,IACvB8T,SAAQ,uCAAE,WAAO3M,EAAP,kBAAAtJ,EAAA,6DAAiBkZ,EAAjB,EAAiBA,UAAjB,SACF3L,EAAaqB,WAAWtF,GADtB,OAER4P,IAFQ,2CAAF,wDAIRpC,iBAAkBC,KAAW,CAAE5U,KAAM4U,OAAaC,aANpD,SAQG,YAAsD,IAAnDZ,EAAkD,EAAlDA,aAAcc,EAAoC,EAApCA,QAASf,EAA2B,EAA3BA,aAA2B,EAAbrV,OACvC,OACE,cAAC,KAAD,CAAMuV,UAAU,UAAhB,SACE,cAAC,KAAD,CAAOpG,KAAK,OAAZ,SACG,gBAAGuF,EAAH,EAAGA,MAAH,OACC,sBAAKzF,MAAO,CAAEK,SAAU,YAAxB,UACE,cAACgF,EAAA,EAAD,CAAQ9D,OAAQ8E,IAChB,kDACErG,MAAO,CAAEkB,MAAO,QAChBsF,YAAY,mEACZqC,KAAM,GACFpD,GAJN,IAKE2D,WAAY,SAACxG,GACG,UAAVA,EAAExR,KAAmBwR,EAAEyG,UAGb,UAAVzG,EAAExR,KAAoBwR,EAAEyG,WAC1BzG,EAAEC,iBACEsE,GACFf,oBAYtB,cAACkD,GAAA,EAAQxH,MAAT,UACGtE,EAAaC,SAASzG,KAAI,SAACuH,GAC1B,OACE,eAAC+K,GAAA,EAAD,WACE,cAACA,GAAA,EAAQC,OAAT,CAAgBzJ,IAAKvB,EAAQ9I,OAAS,qBACtC,eAAC6T,GAAA,EAAQ9G,QAAT,WACE,cAAC8G,GAAA,EAAQE,OAAT,CACE9J,GAAIkB,IACJhB,GAAE,oBAAerB,EAAQ5K,UAF3B,SAIG4K,EAAQjK,cAEX,cAACgV,GAAA,EAAQG,SAAT,UACE,gCAAMC,aAAoBnL,EAAQC,WAAlC,YAEF,cAAC8K,GAAA,EAAQK,KAAT,CAAc3J,MAAO,CAAE4J,WAAY,YAAnC,SACGrL,EAAQnM,YAbDmM,EAAQ1L,kBCvE9BgX,GAAqB,CACzBtR,OAAQ,mBAGJuR,GAAyB,CAC7BzJ,SAAU,WACV0J,OAAQ,KACRC,KAAM,KACN9I,MAAO,OACP+I,OAAQ,OACR3I,MAAO,SAOMnC,gBAAS,YAAsD,IAAD,IAAnBpM,EAAmB,EAAnBA,SACxD,EAEIkM,IADFpE,cAAiBvC,EADnB,EACmBA,iBAAkBvC,EADrC,EACqCA,QAASyC,EAD9C,EAC8CA,qBAE9C,OACE,eAACqJ,GAAA,EAAQC,MAAT,WACE,eAACD,GAAA,EAAD,CAASc,OAAK,EAACtB,SAAS,MAAMrB,MAAO,CAAEkK,QAAS,KAAhD,UACGnX,EAAS0F,aACR,cAAC0L,GAAA,EAAD,CACEnE,MAAO,CAAEK,SAAU,WAAY8J,OAAQ,OAAQH,MAAO,GAAII,IAAK,IAC/DC,QAAM,EACN/I,MAAM,MACNhE,QAAQ,cAGZ,cAACgD,EAAA,EAAD,CACER,IAAG,iCAA4B/M,EAASoC,SAArC,QACHyM,OAAK,EACL5B,MAAO6J,KAET,cAAChI,GAAA,EAAD,CAAS7B,MAAO8J,GAAwBnH,OAAK,EAA7C,SACE,cAACnD,GAAA,EAAKsC,MAAN,UACE,cAACtC,GAAA,EAAD,UACE,eAACA,GAAA,EAAKgD,QAAN,WACE,cAACpB,GAAA,EAAD,CACEH,KAAK,OACL3D,QAASvK,EAASmC,MAClB8K,MAAO,CAAEsB,MAAO,WAElB,4BAAIvH,kBAAOhH,EAASsC,KAAO,wBAC3B,0CACY,IACV,iCACE,cAAC,IAAD,CAAMuK,GAAE,8BAAe7M,EAAS6E,YAAxB,aAAe,EAAejE,UAAtC,mBACGZ,EAAS6E,YADZ,aACG,EAAetD,+BAShC,eAACuN,GAAA,EAAD,CAASM,UAAQ,EAACd,SAAS,SAA3B,UACGtO,EAAS4D,QACR,qCACE,cAACwJ,EAAA,EAAD,CACEmB,MAAOvO,EAAS0F,YAAc,QAAU,MACxC4J,QAAQ,OACRM,OAAK,EACLrF,QACEvK,EAAS0F,YACL,uBACA,kBAENqI,QAAStI,EACTzC,QAASA,IAEX,cAACoK,EAAA,EAAD,CACEmB,MAAM,SACNe,QAAQ,QACR3C,GAAIkB,IACJwB,SAAUrP,EAAS0F,YACnBmH,GAAE,kBAAa7M,EAASF,IAL1B,8BAWFE,EAAS4D,QAAU5D,EAAS2D,SAC5B,cAACyJ,EAAA,EAAD,CAAQpK,QAASA,EAAS+K,QAASxI,EAAnC,gCAIAvF,EAAS4D,SAAW5D,EAAS2D,SAC7B,cAACyJ,EAAA,EAAD,CACEpK,QAASA,EACT+K,QAASxI,EACTgJ,MAAM,OACNc,SAAUrP,EAAS0F,YAJrB,oCC1FK0G,gBAAS,YAAoD,IAApBpM,EAAmB,EAAnBA,SACtD,OACE,eAAC8O,GAAA,EAAQC,MAAT,WACE,cAACD,GAAA,EAAD,CAASR,SAAS,MAAlB,SACE,eAACwD,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa5D,MAAO,EAApB,SACE,cAACqC,GAAA,EAAD,CAAMtC,KAAK,QAAQK,MAAM,OAAOpB,KAAK,WAEvC,cAAC2E,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,SACE,4BAAInO,EAASqC,qBAInB,cAACyM,GAAA,EAAD,CAASR,UAAQ,EAAjB,SACE,eAACwD,EAAA,EAAD,CAAMyF,cAAc,SAApB,UACE,cAACzF,EAAA,EAAKC,OAAN,CAAa5D,MAAO,EAApB,SACE,cAACqC,GAAA,EAAD,CAAMrD,KAAK,WAAWe,KAAK,QAAQK,MAAM,WAE3C,cAACuD,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,SACE,+BAAOnH,kBAAOhH,EAASsC,KAAO,+BAIpC,cAACwM,GAAA,EAAD,CAASR,UAAQ,EAAjB,SACE,eAACwD,EAAA,EAAD,CAAMyF,cAAc,SAApB,UACE,cAACzF,EAAA,EAAKC,OAAN,CAAa5D,MAAO,EAApB,SACE,cAACqC,GAAA,EAAD,CAAMrD,KAAK,SAASe,KAAK,QAAQK,MAAM,WAEzC,cAACuD,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,SACE,iCACGnO,EAASwC,MADZ,KACqBxC,EAASuC,qBC9B3B6J,gBAAS,YAAwD,IAArBpM,EAAoB,EAApBA,SACzD,OACE,qCACE,eAAC8O,GAAA,EAAD,CACEuC,UAAU,SACVpE,MAAO,CAAEkJ,OAAQ,QACjB7H,SAAS,MACTa,WAAS,EACT7C,UAAQ,EACRiC,MAAM,OANR,UAQGvO,EAAS0E,UAAWwL,OAAQ,IACG,IAA/BlQ,EAAS0E,UAAWwL,OAAe,SAAW,SATjD,aAWA,cAACpB,GAAA,EAAD,CAASR,UAAQ,EAAjB,SACE,cAACsC,EAAA,EAAD,CAAM4G,SAAO,EAACC,SAAO,EAArB,SACGzX,EAAS0E,UAAWT,KAAI,SAACiB,GAAD,OACvB,eAACuH,GAAA,EAAD,CAAMQ,MAAO,CAAEK,SAAU,YAAzB,UACGpI,EAAStE,WAAaZ,EAAS4E,cAC9B,cAACwM,GAAA,EAAD,CACEnE,MAAO,CAAEK,SAAU,YACnBiB,MAAM,SACN+I,OAAO,QAHT,kBAQF,cAAC/J,EAAA,EAAD,CAAOW,KAAK,OAAOnB,IAAK7H,EAASxC,OAAS,qBAC1C,eAAC+J,GAAA,EAAKgD,QAAN,CAAc8H,cAAc,SAA5B,UACE,cAAC9K,GAAA,EAAK4B,OAAN,CAAa1B,GAAG,KAAhB,SACE,cAAC,IAAD,CAAME,GAAE,oBAAe3H,EAAStE,UAAhC,SACGsE,EAAS3D,gBAGb2D,EAASW,WACR,cAAC4G,GAAA,EAAKiL,MAAN,CAAYzK,MAAO,CAAEsB,MAAO,UAA5B,4BAlBsCrJ,EAAStE,uBCsBlDwL,gBAtCS,WACtB,MAOIF,IANFpE,cACoB9H,EAFtB,EAEI8C,iBACAiC,EAHJ,EAGIA,aACA9B,EAJJ,EAIIA,eACA0C,EALJ,EAKIA,sBAGI7F,EAAOwV,cAAPxV,GAWR,OATA+R,qBAAU,WAIR,OAHI/R,GACFiF,EAAajF,GAER,WACL6F,OAED,CAAC7F,EAAIiF,EAAcY,IAElB1C,IAAmBjD,EACd,cAACwU,GAAD,IAIP,eAAC1C,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,UACE,cAAC,GAAD,CAAwBnO,SAAUA,IAClC,cAAC,GAAD,CAAsBA,SAAUA,IAChC,cAAC,GAAD,CAAsB6K,WAAY7K,EAASF,QAE7C,cAACgS,EAAA,EAAKC,OAAN,CAAa5D,MAAO,EAApB,SACE,cAAC,GAAD,CAAyBnO,SAAUA,YCtC5B,SAAS2X,KACtB,IACA,EAA4BjG,mBAAS,MAArC,mBAAO1T,EAAP,KAAeoV,EAAf,KAkCA,OACE,qCACE,cAAC/E,GAAA,EAAD,CAAQ1B,GAAG,KAAKpC,QAAQ,yBACxB,cAACuE,GAAA,EAAD,UACE,eAAC1B,EAAA,EAAO2B,MAAR,CAAc6I,OAAO,IAArB,UACE,cAACxK,EAAA,EAAD,CAAQW,QArChB,WACEjR,IAAMqC,IAAI0Y,uBAA6BlP,OAAM,SAACmL,GAAD,OAASvP,QAAQC,IAAIsP,OAoC3BvJ,QAAQ,YAAYqF,OAAK,EAACkI,SAAO,IAClE,cAAC1K,EAAA,EAAD,CACEW,QAnCV,WACEjR,IACGqC,IAAI0Y,yBACJlP,OAAM,SAACmL,GAAD,OAASvP,QAAQC,IAAIsP,EAAItW,cAiC1B+M,QAAQ,cACRqF,OAAK,EACLkI,SAAO,IAET,cAAC1K,EAAA,EAAD,CACEW,QAjBV,WACEjR,IAAMwC,KAAKuY,iBAAwB,IAAIlP,OAAM,SAACmL,GAAD,OAASV,EAAUU,OAiBxDvJ,QAAQ,mBACRqF,OAAK,EACLkI,SAAO,IAET,cAAC1K,EAAA,EAAD,CACEW,QAzCV,WACEjR,IAAMqC,IAAI0Y,0BAAgClP,OAAM,SAACmL,GAC/CvP,QAAQC,IAAIsP,EAAItW,cAwCV+M,QAAQ,eACRqF,OAAK,EACLkI,SAAO,IAET,cAAC1K,EAAA,EAAD,CACEW,QAzCV,WACEjR,IACGqC,IAAI0Y,0BACJlP,OAAM,SAACmL,GAAD,OAASvP,QAAQC,IAAIsP,EAAItW,cAuC1B+M,QAAQ,eACRqF,OAAK,EACLkI,SAAO,IAET,cAAC1K,EAAA,EAAD,CAAQW,QAxChB,WACEjR,IACGqC,IAAI0Y,2BACJlP,OAAM,SAAChL,GAAD,OAAW4G,QAAQC,IAAI7G,OAqCM4M,QAAQ,WAAWqF,OAAK,EAACkI,SAAO,SAGnE9Z,GAAU,cAAC4V,GAAD,CAAkB5V,OAAQA,OCtE5B,SAAS+Z,KACtB,OACE,eAACjJ,GAAA,EAAD,CAAS2E,aAAW,EAApB,UACE,eAACpF,GAAA,EAAD,CAAQP,MAAI,EAAZ,UACE,cAAC0C,GAAA,EAAD,CAAMrD,KAAK,WADb,6DAIA,cAAC2B,GAAA,EAAQkJ,OAAT,UACE,cAAC5K,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAG,cAAciL,SAAO,EAA1C,4CCPO1L,oBAAS,WAAwB,IAAD,MACrC/O,EAAgB6O,IAAhB7O,YACR,OACE,eAACmP,EAAA,EAAD,WACE,cAAC6B,GAAA,EAAD,CAAQ1B,GAAG,KAAKpC,QAAQ,iBACxB,cAAC8D,GAAA,EAAD,CAAQ1B,GAAG,KAAK4B,MAAM,MAAMhE,QAAO,UAAElN,EAAYM,aAAd,aAAE,EAAmBsa,WACvD,UAAA5a,EAAYM,aAAZ,eAAmBkC,UAClB,eAACiP,GAAA,EAAD,WACE,cAACT,GAAA,EAAD,CAAQ1B,GAAG,KAAKpC,QAAQ,cAAcgE,MAAM,SAC5C,sBAAMtB,MAAO,CAAEmB,UAAW,IAA1B,mBAAiC/Q,EAAYM,aAA7C,aAAiC,EAAmBkC,mB,UCT/CuM,gBAAS,WACtB,IAAQjD,EAAe+C,IAAf/C,WAER,OACE,cAAC+O,GAAA,EAAD,CACE7N,KAAMlB,EAAWiB,MAAMC,KACvB8N,QAAShP,EAAWC,WACpB8E,KAAK,OAHP,SAKE,cAACgK,GAAA,EAAMzI,QAAP,UAAgBtG,EAAWiB,MAAM/K,Y,UCIxB+M,gBAAS,YAA4C,IAAD,EAAnB9K,EAAmB,EAAnBA,QAC9C,EAEI4K,IADF1B,aAAgBxH,EADlB,EACkBA,QAAS3B,EAD3B,EAC2BA,cAE3B,EAAoCqQ,oBAAS,GAA7C,mBAAO0G,EAAP,KAAmBC,EAAnB,KAEMhF,EAAY,uCAAG,+BAAAnW,EAAA,6DAASsE,EAAT,EAASA,IAAKD,EAAd,EAAcA,YAAd,SACbF,EAAc,CAAEG,MAAKD,cAAaX,SAAUU,EAAQV,WADvC,OAEnByX,GAAc,GAFK,2CAAH,sDAKlB,OACE,eAACvJ,GAAA,EAAD,CAASM,UAAQ,EAAjB,UACE,eAACN,GAAA,EAAD,CAASM,UAAQ,EAAjB,UACE,eAACf,GAAA,EAAD,CAAQiB,QAAQ,OAAhB,UACE,cAACkB,GAAA,EAAD,CAAMrD,KAAK,SADb,UAC8B7L,EAAQC,eAErC6W,EACC,cAAChL,EAAA,EAAD,CACE7C,QAAQ,SACR+E,QAAQ,QACRf,MAAM,OACNR,QAAS,kBAAMsK,GAAeD,MAGhC,cAAChL,EAAA,EAAD,CACE7C,QAAQ,OACR+E,QAAQ,QACRf,MAAM,QACNuJ,SAAO,EACP/J,QAAS,kBAAMsK,GAAeD,SAInCA,EACC,cAACtJ,GAAA,EAAD,CAASM,UAAQ,EAAjB,SACE,cAAC,KAAD,CACEtN,cAAe,CACbN,IAAKF,EAAQE,KAAO,GACpBD,YAAaD,EAAQC,aAAe,IAEtC4R,SAAU,SAAC3M,GAAD,OAAsB6M,EAAa7M,IAL/C,SAOG,YAQK,EAPJA,OAOK,IANL8M,EAMI,EANJA,aAEAe,GAII,EALJrW,OAKI,EAJJqW,OACAD,EAGI,EAHJA,QACAgC,EAEI,EAFJA,UACA/C,EACI,EADJA,aAEA,OACE,eAACT,GAAA,EAAD,CACEW,UAAU,UACVC,aAAa,QACbL,SAAUE,EAHZ,UAKE,cAACd,GAAD,CAAapF,KAAK,cAAcsG,YAAY,iBAC5C,cAACiB,GAAD,CAAYvH,KAAK,MAAMsG,YAAY,MAAMqC,KAAM,IAE/C,cAAC1I,EAAA,EAAD,CACEkC,QAAQ,QACRoE,KAAK,SACLnJ,QAAQ,SACR8C,UAAQ,EACRrK,QAASA,EACTqM,SAAUiE,IAAiBe,IAAUD,IAEvC,cAAChH,EAAA,EAAD,CACEkC,QAAQ,QACRoE,KAAK,SACLnJ,QAAQ,SACR8E,SAAUrM,EACV+K,QAAS,WACPqI,IACAiC,GAAc,cAS5B,6CACG/W,EAAQE,WADX,aACG,EAAagI,MAAM,MAAMvF,KAAI,SAACzC,EAAKuS,GAAN,OAC5B,4BAAcvS,GAANuS,cClGduE,GAAQ,CACZ,CAAEC,SAAU,gBAAiBC,KAAM,CAAEna,IAAK,WAC1C,CAAEka,SAAU,cAAeC,KAAM,CAAEna,IAAK,SACxC,CAAEka,SAAU,UAAWC,KAAM,CAAEna,IAAK,aAGvB+N,gBAAS,WACtB,IAAQ5B,EAAiB0B,IAAjB1B,aACAvC,EACNuC,EADMvC,mBAAoB3G,EAC1BkJ,EAD0BlJ,QAASgG,EACnCkD,EADmClD,kBAAmBtD,EACtDwG,EADsDxG,WAGxD6N,qBAAU,WACR5J,EAAmB3G,EAASV,SAAU,YACrC,CAACqH,EAAoB3G,IASxB,OACE,cAACmX,GAAA,EAAIC,KAAL,CAAU1V,QAASsE,EAAnB,SACE,eAACwK,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,SACE,cAACE,GAAA,EAAD,CAAQiB,QAAQ,OAAOxB,KAAK,WAAWvD,QAAS,iBAElD,eAACuH,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,UACE,cAACsK,GAAA,EAAD,CACEH,MAAOA,GACPK,KAAM,CAAExJ,WAAW,EAAMxB,UAAU,GACnCiL,YAAa,SAAC/I,EAAGrT,GAAJ,OAjBC,SAACqT,EAAmBrT,GAC1CyL,EACE3G,EAASV,SACT0X,GAAM9b,EAAKqc,aAAuBL,KAAKna,KAcPya,CAAgBjJ,EAAGrT,MAE/C,uBACA,cAAC8T,GAAA,EAAKvB,MAAN,CAAYgK,YAAa,EAAzB,SACG/U,EAAWC,KAAI,SAACjE,GAAD,OACd,eAACsQ,GAAA,EAAD,CACE3D,GAAIkB,IACJhB,GAAE,sBAAiB7M,EAASF,IAF9B,UAKE,cAACyN,EAAA,EAAD,CACER,IAAG,iCAA4B/M,EAASoC,SAArC,QACH6K,MAAO,CAAE+B,UAAW,IAAKgK,UAAW,WAEtC,eAAC1I,GAAA,EAAKb,QAAN,WACE,cAACa,GAAA,EAAKjC,OAAN,CAAagD,UAAU,SAAvB,SAAiCrR,EAASmC,QAE1C,eAACmO,GAAA,EAAK2I,KAAN,CAAW5H,UAAU,SAArB,UACE,8BAAMrK,kBAAO,IAAI7C,KAAKnE,EAASsC,MAAO,YACtC,8BAAM0E,kBAAO,IAAI7C,KAAKnE,EAASsC,MAAO,oBAXrCtC,EAASF,oBCzCfsM,gBAAS,WACtB,IAAQ5B,EAAiB0B,IAAjB1B,aACAlJ,EAAsDkJ,EAAtDlJ,QAAS+F,EAA6CmD,EAA7CnD,WAAYD,EAAiCoD,EAAjCpD,kBAAmBG,EAAciD,EAAdjD,UAEhD,OACE,cAACkR,GAAA,EAAIC,KAAL,CAAU1V,QAASoE,EAAnB,SACE,eAAC0K,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,SACE,cAACE,GAAA,EAAD,CACEiB,QAAQ,OACRxB,KAAK,OACLvD,QACgB,IAAdhD,EAAA,kCACwBjG,QADxB,IACwBA,OADxB,EACwBA,EAASC,aADjC,wBAEcD,QAFd,IAEcA,OAFd,EAEcA,EAASC,YAFvB,qBAMN,cAACuQ,EAAA,EAAKC,OAAN,CAAa5D,MAAO,GAApB,SACE,cAACmC,GAAA,EAAKvB,MAAN,CAAYgK,YAAa,EAAzB,SACG1R,EAAWpD,KAAI,SAAC3C,GAAD,OACd,cAAC,GAAD,CAAoCA,QAASA,GAA3BA,EAAQV,yB,iBClBzB,SAASsY,GAAT,GAGH,IAFVC,EAES,EAFTA,aACAC,EACS,EADTA,WAEA,OACE,cAAC,KAAD,CACErM,IAAKoM,EACLlM,MAAO,CAAEiK,OAAQ,IAAK/I,MAAO,QAC7BkL,mBAAoB,EACpBC,YAAa,EACbC,QAAQ,eACRC,QAAQ,EACRC,SAAU,EACVC,aAAc,EACdC,YAAY,EACZC,cAAe,SAACC,GAAD,OAAaT,EAAWS,M,cChB9B,SAASC,GAAT,GAAoD,IAArBC,EAAoB,EAApBA,SACtCC,EAAW,CACf7D,OAAQ,kBACRzF,YAAa,OACbuJ,aAAc,MACdC,WAAY,OACZ7I,UAAW,SACX6F,OAAQ,KAOJiD,EAASC,uBACb,SAACC,GACCN,EACEM,EAAcpW,KAAI,SAACnD,GAAD,OAChBiB,OAAOC,OAAOlB,EAAM,CAAEyY,QAASe,IAAIC,gBAAgBzZ,WAIzD,CAACiZ,IAGH,EAAsDS,aAAY,CAAEL,WAA5DM,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAErC,OACE,gDACMF,KADN,IAEExN,MAAO0N,EAAY,2BAAQX,GApBd,CACftJ,YAAa,YAmB0CsJ,EAFvD,UAIE,qCAAWU,MACX,cAAClK,GAAA,EAAD,CAAMrD,KAAK,SAASe,KAAK,SACzB,cAACG,GAAA,EAAD,CAAQ9D,QAAQ,wBChCP,SAASqQ,GAAT,GAA8D,IAAjC5X,EAAgC,EAAhCA,QAASnC,EAAuB,EAAvBA,YACnD,EAA0B6Q,mBAAS,IAAnC,mBAAOmJ,EAAP,KAAcd,EAAd,KACA,EAA8BrI,qBAA9B,mBAAOmI,EAAP,KAAgBT,EAAhB,KAkBA,OANAvH,qBAAU,WACR,OAAO,WACLgJ,EAAMpX,SAAQ,SAAC3C,GAAD,OAAewZ,IAAIQ,gBAAgBha,EAAKyY,eAEvD,CAACsB,IAGF,eAAC/I,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,CAAa5D,MAAM,IAAnB,UACE,cAACE,GAAA,EAAD,CAAQoD,KAAG,EAAClD,MAAM,OAAOhE,QAAQ,uBACjC,cAACuP,GAAD,CAAqBC,SAAUA,OAEjC,cAACjI,EAAA,EAAKC,OAAN,CAAa5D,MAAM,MACnB,eAAC2D,EAAA,EAAKC,OAAN,CAAa5D,MAAM,IAAnB,UACE,cAACE,GAAA,EAAD,CAAQoD,KAAG,EAAClD,MAAM,OAAOhE,QAAQ,0BAChCsQ,GAASA,EAAM3K,OAAS,GACvB,cAACgJ,GAAD,CACEE,WAAYA,EACZD,aAAc0B,EAAM,GAAGtB,aAI7B,cAACzH,EAAA,EAAKC,OAAN,CAAa5D,MAAM,MACnB,eAAC2D,EAAA,EAAKC,OAAN,CAAa5D,MAAM,IAAnB,UACE,cAACE,GAAA,EAAD,CAAQoD,KAAG,EAAClD,MAAM,OAAOhE,QAAQ,gCACjC,qCACE,qBACEgJ,UAAU,cACVtG,MAAO,CAAE8N,SAAU,SAAU/L,UAAW,OAEzC6L,GAASA,EAAM3K,OAAS,GACvB,eAAC9C,EAAA,EAAO2B,MAAR,CAAc6I,OAAO,IAArB,UACE,cAACxK,EAAA,EAAD,CACEW,QA3CC,WACT8L,GACFA,EAAQmB,mBAAmBC,QAAO,SAACC,GAC7BA,GACFra,EAAYqa,OAwCN7N,UAAQ,EACRS,KAAK,QACL9K,QAASA,IAEX,cAACoK,EAAA,EAAD,CACEW,QAAS,kBAAMgM,EAAS,KACxBjM,KAAK,QACLuB,SAAUrM,gBCtDXoJ,oBAAS,YAA6C,IAAD,EAAnB9K,EAAmB,EAAnBA,QAC/C,EASI4K,IARF1B,aACE2Q,EAFJ,EAEIA,cACAta,EAHJ,EAGIA,YACAsG,EAJJ,EAIIA,UACAnE,EALJ,EAKIA,QACA9B,EANJ,EAMIA,aACAE,EAPJ,EAOIA,YAGJ,EAAwCsQ,oBAAS,GAAjD,mBAAO0J,EAAP,KAAqBC,EAArB,KACA,EAA4B3J,mBAAS,IAArC,mBAAO4J,EAAP,KAAeC,EAAf,KAwBA,OACE,cAAC9C,GAAA,EAAIC,KAAL,UACE,eAAC5G,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,CAAa5D,MAAM,KAAnB,UACE,cAACE,GAAA,EAAD,CAAQiB,QAAQ,OAAOxB,KAAK,QAAQvD,QAAQ,WAC3C4Q,GACC,cAAC/N,EAAA,EAAD,CACEkC,QAAQ,QACRM,OAAK,EACLrF,QAAS6Q,EAAe,SAAW,YACnCrN,QAAS,kBAAMsN,GAAiBD,SAItC,cAACtJ,EAAA,EAAKC,OAAN,CAAa5D,MAAM,KAAnB,SACGiN,EACC,cAACR,GAAD,CACE/Z,YAvCc,SAACC,GACzBD,EAAYC,GAAM1B,MAAK,WACrBic,GAAgB,OAsCRrY,QAASmE,IAGX,cAACmJ,GAAA,EAAKvB,MAAN,CAAYgK,YAAY,IAAxB,mBACGzX,EAAQqG,cADX,aACG,EAAgB1D,KAAI,SAACyD,GAAD,OACnB,eAAC4I,GAAA,EAAD,WACE,cAAC/C,EAAA,EAAD,CAAOR,IAAKrF,EAAMxI,MACjBic,GACC,eAAC/N,EAAA,EAAO2B,MAAR,CAAcF,OAAK,EAAC+I,OAAO,IAA3B,UACE,cAACxK,EAAA,EAAD,CACEwC,OAAK,EACLrB,MAAM,QACNhE,QAAQ,OACR4C,KAAI,UAAKzF,EAAM5H,GAAX,SACJuP,SAAU3H,EAAME,OAChB5E,QAASsY,IAAM,UAAQ5T,EAAM5H,GAAd,UAA2BkD,EAC1C+K,QAAS,SAAC8B,GAAD,OAlDJ,SACzBnI,EACAmI,GAEA0L,EAAU1L,EAAE2L,cAAcrO,MAC1BjM,EAAawG,GA6CuB+T,CAAmB/T,EAAOmI,MAE5C,cAACzC,EAAA,EAAD,CACEwC,OAAK,EACLrB,MAAM,MACNT,KAAK,QACLX,KAAI,UAAKzF,EAAM5H,GAAX,QACJkD,QAASsY,IAAM,UAAQ5T,EAAM5H,GAAd,SAA0BkD,EACzC+K,QAAS,SAAC8B,GAAD,OAlDL,SACxBnI,EACAmI,GAEA0L,EAAU1L,EAAE2L,cAAcrO,MAC1B/L,EAAYsG,GA6CwBgU,CAAkBhU,EAAOmI,WAnBtCnI,EAAM5H,mBCxDlBsM,gBAAS,YAA8C,IAApB9K,EAAmB,EAAnBA,QACxCkJ,EAAiB0B,IAAjB1B,aACF8N,EAAQ,CACZ,CAAEC,SAAU,QAAS5E,OAAQ,kBAAM,cAAC,GAAD,CAAcrS,QAASA,MAC1D,CAAEiX,SAAU,SAAU5E,OAAQ,kBAAM,cAAC,GAAD,CAAerS,QAASA,MAC5D,CAAEiX,SAAU,QAAS5E,OAAQ,kBAAM,cAAC,GAAD,MACnC,CACE4E,SAAU,YACV5E,OAAQ,kBAAM,cAAC,GAAD,MAEhB,CACE4E,SAAU,YACV5E,OAAQ,kBAAM,cAAC,GAAD,OAIlB,OACE,cAAC8E,GAAA,EAAD,CACEE,KAAM,CAAE9J,OAAO,EAAMZ,UAAU,GAC/B0N,aAAa,QACbrD,MAAOA,EACPM,YAAa,SAAC/I,EAAGrT,GACfgO,EAAahD,aAAahL,EAAKqc,mB,UCnBxBzM,gBAAS,YAA6C,IAApB9K,EAAmB,EAAnBA,QAC/C,OACE,cAACwN,GAAA,EAAD,UACE,eAACgD,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAa5D,MAAM,KAAnB,SACE,cAAC1B,GAAA,EAAKsC,MAAN,UACE,eAACtC,GAAA,EAAD,WACE,cAACA,GAAA,EAAKc,MAAN,CACEC,QAAM,EACNU,KAAK,QACLnB,KAAY,OAAPzL,QAAO,IAAPA,OAAA,EAAAA,EAASoB,QAAS,qBAEzB,cAAC+J,GAAA,EAAKgD,QAAN,CAAc8H,cAAc,SAA5B,SACE,cAAClJ,GAAA,EAAD,CAAQ1B,GAAG,KAAKpC,QAAO,OAAEjJ,QAAF,IAAEA,OAAF,EAAEA,EAASC,uBAK1C,eAACuQ,EAAA,EAAKC,OAAN,CAAa5D,MAAM,IAAnB,UACE,eAACyN,GAAA,EAAU7M,MAAX,CAAiB6I,OAAO,IAAxB,UACE,cAACgE,GAAA,EAAD,CAAW7I,MAAM,YAAYxP,MAAOjC,EAAQwE,gBAC5C,cAAC8V,GAAA,EAAD,CAAW7I,MAAM,YAAYxP,MAAOjC,EAAQyG,oBAE9C,cAACwM,GAAA,EAAD,IACA,cAAC,GAAD,CAAcjT,QAASA,eChClB8K,gBAAS,WACtB,IAAQxL,EAAa0U,cAAb1U,SACR,EAEIsL,IADF1B,aAAgB/C,EADlB,EACkBA,YAAaP,EAD/B,EAC+BA,eAAgB5F,EAD/C,EAC+CA,QAASkG,EADxD,EACwDA,aAUxD,OAPAqK,qBAAU,WAER,OADApK,EAAY7G,GACL,WACL4G,EAAa,MAEd,CAAC5G,EAAU6G,EAAaD,IAEvBN,EACK,cAACsN,GAAD,CAAkBjK,QAAQ,uBAGjC,cAACuH,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,OAAN,CAAa5D,MAAM,KAAnB,UACG7M,GAAW,cAAC,GAAD,CAAeA,QAASA,IACnCA,GAAW,cAAC,GAAD,CAAgBA,QAASA,Y,2BCpB9B,SAASua,GAAT,GAGH,IAFCC,EAEF,EAFTC,UACGC,EACM,mBAEM1H,EACXpI,IADF1N,UAAa8V,WAEf,OACE,cAAC,IAAD,2BACM0H,GADN,IAEErI,OAAQ,SAACnB,GAAD,OACN8B,EAAa,cAACwH,EAAD,eAAetJ,IAAY,cAAC,IAAD,CAAU3F,GAAG,UC6D9CT,oBA9Df,WACE,IAAM6P,EAAWC,cACjB,EAAmChQ,IAA3B7O,EAAR,EAAQA,YAAamB,EAArB,EAAqBA,UAWrB,OAVAqT,qBAAU,WACJxU,EAAYF,MACdqB,EAAU0K,UAAUiT,SAAQ,WAC1B9e,EAAY4M,kBAGdzL,EAAUwK,yBAAyB5J,MAAK,kBAAM/B,EAAY4M,oBAE3D,CAAC5M,EAAamB,IAEZnB,EAAY2M,UAKf,qCACE,cAAC,IAAD,CAAgBsD,SAAS,eAAe8O,iBAAe,EAACC,MAAM,YAC9D,cAAC,GAAD,IACA,cAAC,IAAD,CAAOvP,OAAK,EAACwP,KAAK,IAAIP,UAAWQ,KACjC,cAAC,IAAD,CACED,KAAM,QACN3I,OAAQ,kBACN,qCACE,cAAC,EAAD,IACA,cAACnH,EAAA,EAAD,CAAWS,MAAO,CAAEmB,UAAW,OAA/B,SACE,eAAC,IAAD,WACE,cAACyN,GAAD,CACE/O,OAAK,EACLwP,KAAK,cACLP,UAAWS,KAEb,cAACX,GAAD,CACE/O,OAAK,EACLwP,KAAK,kBACLP,UAAWU,KAEb,cAACZ,GAAD,CACE/O,OAAK,EACLwP,KAAM,CAAC,kBAAmB,eAC1BP,UAAWW,IACNT,EAAS5d,KAEhB,cAACwd,GAAD,CACE/O,OAAK,EACLwP,KAAK,sBACLP,UAAWY,KAEb,cAAC,IAAD,CAAO7P,OAAK,EAACwP,KAAK,UAAUP,UAAWpE,KACvC,cAAC,IAAD,CAAO2E,KAAK,eAAeP,UAAWa,KACtC,cAAC,IAAD,CAAOb,UAAWhE,mBAtCvB,cAACvD,GAAD,CAAkBjK,QAAQ,sB,SCnBtBsS,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3d,MAAK,YAAkD,IAA/C4d,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,4BCNC,SAASO,KACtB,IAAQC,EAAapB,cAAboB,SAMR,OAJAzL,qBAAU,WACRjJ,OAAO2U,SAAS,EAAG,KAClB,CAACD,IAEG,KCIF,IAAMpf,GAAUsf,eAEvBC,IAAS9J,OACP,cAAC3H,EAAa0R,SAAd,CAAuBna,MAAOnG,EAA9B,SACE,eAAC,IAAD,CAAQc,QAASA,GAAjB,UACE,cAACmf,GAAD,IACA,cAAC,GAAD,SAGJM,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.d4974d86.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalPages: number;\n  totalItems: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n  constructor(pageNumber = 1, pageSize = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { ActivityFormValues, Activity } from \"../models/Activity\";\nimport { PaginatedResult } from \"../models/Pagination\";\nimport { Photo, Profile } from \"../models/Profile\";\nimport { IUser, IUserFormValues } from \"../models/User\";\nimport { UserActivity } from \"../models/UserActivity\";\nimport { store } from \"../stores/store\";\n\nconst sleep = (delay: number) =>\n  new Promise((resolve) => {\n    return setTimeout(resolve, delay);\n  });\n\naxios.interceptors.request.use(async (request) => {\n  const token = store.commonStore.token;\n  if (token) {\n    request.headers.Authorization = `Bearer ${token}`;\n  }\n  return request;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === \"development\") {\n      await sleep(1000);\n    }\n\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(\n        response.data,\n        JSON.parse(pagination)\n      );\n\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config, headers } = error.response!;\n    switch (status) {\n      case 400:\n        if (typeof data === \"string\") {\n          toast.error(data);\n        }\n\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"/notfound\");\n        }\n\n        if (data.errors) {\n          const modelStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modelStateErrors.push(data.errors[key]);\n            }\n          }\n\n          throw modelStateErrors.flat();\n        }\n        break;\n\n      case 401:\n        if (\n          status === 401 &&\n          headers[\"www-authenticate\"].startsWith(`Bearer error=\"invalid_token\"`)\n        ) {\n          store.userStore.logout();\n          toast.error(\"Session expired, please login again\");\n        }\n        // toast.error(\"Unauthorized\");\n        break;\n\n      case 404:\n        history.push(\"/notfound\");\n        break;\n\n      case 500:\n        store.commonStore.setServerError(JSON.parse(data));\n        history.push(\"/servererror\");\n        break;\n\n      default:\n        return Promise.reject(error);\n    }\n  }\n);\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst request = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios\n      .get<PaginatedResult<Activity[]>>(\"/activities\", {\n        params,\n      })\n      .then(responseBody),\n  details: (id: string) => request.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) =>\n    request.post<ActivityFormValues>(\"/activities\", activity),\n  update: (activity: ActivityFormValues) =>\n    request.put<ActivityFormValues>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => request.del<void>(`/activities/${id}`),\n  attend: (id: string) => request.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => request.get<IUser>(\"/account\"),\n  login: (user: IUserFormValues) => request.post<IUser>(\"/account/login\", user),\n  register: (user: IUserFormValues) =>\n    request.post<IUser>(\"/account/register\", user),\n  fbLogin: (accessToken: string) =>\n    request.post<IUser>(`/account/fbLogin?accessToken=${accessToken}`, {}),\n  refreshToken: () => request.post<IUser>(\"/account/refresh\", {}),\n};\n\nconst Profiles = {\n  get: (username: string) => request.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"/photos\", formData, {\n      headers: { \"Content-type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (photoId: string) =>\n    request.post(`/photos/${photoId}/setmain`, {}),\n  deletePhoto: (photoId: string) => request.del(`/photos/${photoId}`),\n  updateProfile: (profile: Pick<Profile, \"displayName\" | \"bio\" | \"username\">) =>\n    request.put(`/profiles`, {\n      displayName: profile.displayName,\n      bio: profile.bio,\n    }),\n  updateFollowing: (username: string) =>\n    request.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    request.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    request.get<UserActivity[]>(\n      `/profiles/${username}/activities?predicate=${predicate}`\n    ),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport { format } from \"date-fns\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/Activity\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/Profile\";\nimport { Pagination, PagingParams } from \"../models/Pagination\";\n\nexport enum PredicateKeys {\n  all = \"all\",\n  startDate = \"startDate\",\n  isHost = \"isHost\",\n  isGoing = \"isGoing\",\n}\n\ntype PredicateValues = boolean | Date;\n\ntype PredicateMap = Map<PredicateKeys, PredicateValues>;\n\nexport default class ActivityStore {\n  activityRegistry: Map<string, Activity> = new Map();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate: PredicateMap = new Map().set(PredicateKeys.all, true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: PredicateKeys, value: PredicateValues) => {\n    const resetPredicate = () =>\n      this.predicate.forEach((value, key) => {\n        if (key !== PredicateKeys.startDate) {\n          this.predicate.delete(key);\n        }\n      });\n    switch (predicate) {\n      case PredicateKeys.all: {\n        resetPredicate();\n        this.predicate.set(PredicateKeys.all, true);\n        break;\n      }\n\n      case PredicateKeys.isGoing: {\n        resetPredicate();\n        this.predicate.set(PredicateKeys.isGoing, true);\n        break;\n      }\n\n      case PredicateKeys.isHost: {\n        resetPredicate();\n        this.predicate.set(PredicateKeys.isHost, true);\n        break;\n      }\n\n      case PredicateKeys.startDate: {\n        this.predicate.delete(PredicateKeys.startDate);\n        this.predicate.set(PredicateKeys.startDate, value);\n        break;\n      }\n    }\n  };\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n\n    this.predicate.forEach((value, key) => {\n      if (key === PredicateKeys.startDate) {\n        params.append(PredicateKeys.startDate, (value as Date).toISOString());\n      } else {\n        params.append(key, (value as boolean).toString());\n      }\n    });\n    return params;\n  }\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort((a1, a2) => {\n      return a1.date!.getTime() - a2.date!.getTime();\n    });\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.setLoadingInitial(true);\n    try {\n      const { data, pagination } = await agent.Activities.list(\n        this.axiosParams\n      );\n\n      const activities = data.map((act) => ({\n        ...act,\n        date: new Date(act.date!),\n      }));\n\n      runInAction(() => {\n        activities.forEach((act) => {\n          this.setActivity(act);\n          this.setPagination(pagination);\n        });\n      });\n    } catch (error) {\n      console.log(\"error initial load:: \", error);\n    } finally {\n      runInAction(() => {\n        this.setLoadingInitial(false);\n      });\n    }\n  };\n\n  private setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  private getActivityFromMemory = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  private setActivity = (activity: Activity) => {\n    const { user } = store.userStore;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.username === user.username\n      );\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(\n        (a) => a.username === activity.hostUsername\n      );\n    }\n\n    activity.date = new Date(activity.date!);\n    // console.log(activity);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivityFromMemory(id);\n    if (activity) {\n      this.selectedActivity = activity;\n    } else {\n      this.setLoadingInitial(true);\n      try {\n        activity = await agent.Activities.details(id);\n        runInAction(() => {\n          this.setActivity(activity!);\n          this.selectedActivity = activity;\n        });\n      } catch (error) {\n        console.log(\"Unable to get activity\");\n      } finally {\n        runInAction(() => {\n          this.setLoadingInitial(false);\n        });\n      }\n    }\n    return activity;\n  };\n\n  setLoadingInitial = (isLoading: boolean) => {\n    this.loadingInitial = isLoading;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    const newActivity = new Activity(activity);\n    newActivity.hostUsername = user!.username;\n    newActivity.attendees = [attendee];\n    this.setActivity(newActivity);\n    try {\n      await agent.Activities.create(activity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(\"Create failed\");\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivityFromMemory(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(\"Update failed\");\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        if (this.selectedActivity?.id === id) {\n          this.selectedActivity = undefined;\n        }\n      });\n    } catch (error) {\n      console.log(\"Delete failed\");\n    } finally {\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter(\n              (a) => a.username !== user?.username\n            );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled =\n          !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? (attendee.followerCount -= 1)\n            : (attendee.followerCount += 1);\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { Profile } from \"./Profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(initialValues?: ActivityFormValues) {\n    Object.assign(this, initialValues);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = \"\";\n  category: string = \"\";\n  description: string = \"\";\n  date: Date | null = null;\n  city: string = \"\";\n  venue: string = \"\";\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}\n","import { IUser } from \"./User\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  photos?: Photo[];\n  followerCount: number;\n  followingCount: number;\n  following: boolean;\n}\n\nexport class Profile implements Profile {\n  constructor(user: IUser) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile } from \"../models/Profile\";\nimport { UserActivity } from \"../models/UserActivity\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile: boolean = false;\n  uploading: boolean = false;\n  loading: boolean = false;\n  loadingFollowings: boolean = false;\n  followings: Profile[] = [];\n  activities: UserActivity[] = [];\n  loadingActivities = false;\n  activeTab = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    );\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  };\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n      });\n    } catch (error) {\n      console.log(\"error:: \", error);\n    } finally {\n      runInAction(() => {\n        this.loadingProfile = false;\n      });\n    }\n  };\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.uploading = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.forEach((photo) => {\n            if (photo.isMain) {\n              photo.isMain = false;\n            }\n          });\n          photo.isMain = true;\n          this.profile.image = photo.url;\n          store.userStore.setImage(photo.url);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      const photoId = photo.id;\n      await agent.Profiles.deletePhoto(photoId);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.image = undefined;\n          this.profile.photos = this.profile.photos?.filter(\n            (photo) => photo.id !== photoId\n          );\n          store.userStore.setImage(undefined);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateProfile = async (\n    profile: Pick<Profile, \"displayName\" | \"bio\" | \"username\">\n  ) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        this.profile!.displayName = profile.displayName;\n        this.profile!.bio = profile.bio || this.profile!.bio;\n\n        store.userStore.user!.displayName = profile.displayName;\n        store.activityStore.activityRegistry.forEach((activity) => {\n          activity.attendees.forEach((attendee) => {\n            if (attendee.username === profile.username) {\n              attendee.displayName = profile.displayName;\n              attendee.bio = profile.bio || attendee.bio;\n            }\n          });\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.username &&\n          this.profile.username === username\n        ) {\n          following\n            ? (this.profile.followerCount += 1)\n            : (this.profile.followerCount -= 1);\n          this.profile.following = !this.profile.following;\n        }\n\n        if (\n          this.profile &&\n          this.profile.username === store.userStore.user?.username\n        ) {\n          following\n            ? (this.profile.followingCount += 1)\n            : (this.profile.followingCount -= 1);\n        }\n\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following\n              ? (profile.followerCount -= 1)\n              : (profile.followerCount += 1);\n            profile.following = !profile.following;\n          }\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(\n        this.profile!.username,\n        predicate\n      );\n      runInAction(() => {\n        this.followings = followings;\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loadingFollowings = false));\n    }\n  };\n\n  loadUserActivities = async (username: string, predicate: string) => {\n    this.loadingActivities = false;\n    try {\n      const activities = await agent.Profiles.listActivities(\n        username,\n        predicate\n      );\n      this.activities = activities;\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loadingActivities = false));\n    }\n  };\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { IUser, IUserFormValues } from \"../models/User\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: IUser | null = null;\n  fbAccessToken: string | null = null;\n  fbLoading = false;\n  refreshTokenTimeout: any;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: IUserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      runInAction(() => {\n        store.commonStore.setToken(user.token);\n        this.user = user;\n        this.startRefreshTokenTimer(user);\n        history.push(\"/activities\");\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    this.user = null;\n    history.push(\"/\");\n  };\n\n  facebookLogin = () => {\n    this.fbLoading = true;\n\n    const apiLogin = (accessToken: string) => {\n      agent.Account.fbLogin(accessToken)\n        .then((user) => {\n          store.commonStore.setToken(user.token);\n          this.startRefreshTokenTimer(user);\n          runInAction(() => {\n            this.user = user;\n            this.fbLoading = false;\n          });\n          history.push(\"/activities\");\n        })\n        .catch((error) => {\n          this.fbLoading = false;\n        });\n    };\n\n    if (this.fbAccessToken) {\n      apiLogin(this.fbAccessToken);\n    } else {\n      window.FB.login(\n        (response) => {\n          apiLogin(response.authResponse.accessToken);\n        },\n        { scope: \"public_profile,email\" }\n      );\n    }\n  };\n\n  getFacebookLoginStatus = async () => {\n    window.FB.getLoginStatus((response) => {\n      if (response.status === \"connected\") {\n        this.fbAccessToken = response.authResponse.accessToken;\n      }\n    });\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      this.startRefreshTokenTimer(user);\n      runInAction(() => {\n        if (user) {\n          this.user = user;\n        }\n      });\n    } catch (error) {\n      console.log(\"error:: \", error);\n    }\n  };\n\n  register = async (creds: IUserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n      runInAction(() => {\n        store.commonStore.setToken(user.token);\n        this.user = user;\n        store.modalStore.closeModal();\n        history.push(\"/activities\");\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  setImage = (image: string | undefined) => {\n    if (this.user) {\n      this.user.image = image;\n    }\n  };\n\n  refreshToken = async () => {\n    this.stopRefreshTokenTimer();\n    try {\n      const user = await agent.Account.refreshToken();\n      runInAction(() => (this.user = user));\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  private startRefreshTokenTimer(user: IUser) {\n    const jwtToken = JSON.parse(atob(user.token.split(\".\")[1]));\n\n    var expires = new Date(jwtToken.exp * 1000);\n    // set the timer 30s before the actual expire time\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\n\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\n  }\n\n  private stopRefreshTokenTimer() {\n    clearTimeout(this.refreshTokenTimeout);\n  }\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./ActivityStore\";\nimport CommentStore from \"./CommentStore\";\nimport CommonStore from \"./CommonStore\";\nimport ModalStore from \"./ModalStore\";\nimport ProfileStore from \"./ProfileStore\";\nimport UserStore from \"./UserStore\";\n\ninterface IStore {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: IStore = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport const useStore = () => {\n  return useContext(StoreContext);\n};\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { IServerError } from \"../models/ServerError\";\n\nexport default class CommonStore {\n  error: IServerError | null | undefined;\n  token: string | null = window.localStorage.getItem(\"jwt\");\n  appLoaded: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          localStorage.setItem(\"jwt\", token);\n        } else {\n          localStorage.removeItem(\"jwt\");\n        }\n      }\n    );\n  }\n\n  setServerError = (error: IServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from \"mobx\";\n\ninterface IModal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: IModal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}\n","import {\n  HubConnection,\n  HubConnectionBuilder,\n  LogLevel,\n} from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/Comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=${activityId}`, {\n          accessTokenFactory: () => store.userStore.user!.token,\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection.start().catch((error) => {\n        console.log(\"Error on hub conn: \", error);\n      });\n\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\n        runInAction(() => {\n          this.comments = comments.map((comment) => ({\n            ...comment,\n            createdAt: new Date(`${comment.createdAt}Z`),\n          }));\n        });\n      });\n\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\n        runInAction(() => {\n          this.comments.unshift({\n            ...comment,\n            createdAt: new Date(comment.createdAt),\n          });\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection?.stop().catch((error) => {\n      console.log(\"error on stop hub connection: \", error);\n    });\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke(\"SendComment\", values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nconst Navbar = () => {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item header as={NavLink} to={\"/\"} exact>\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: 10 }} />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item name=\"Activities\" as={NavLink} to={\"/activities\"} />\n        <Menu.Item name=\"Errors\" as={NavLink} to={\"/errors\"} />\n        <Menu.Item>\n          <Button\n            positive\n            content=\"Create Activity\"\n            as={NavLink}\n            to=\"/createActivity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image\n            src={user?.image || \"/assets/user.png\"}\n            avatar\n            spaced=\"right\"\n          />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n};\n\nexport default observer(Navbar);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { PredicateKeys } from \"../../../app/stores/ActivityStore\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst ActivityFilters = observer(() => {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 26 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has(PredicateKeys.all)}\n          onClick={() => setPredicate(PredicateKeys.all, true)}\n        />\n        <Menu.Item\n          content=\"I'm Going\"\n          active={predicate.has(PredicateKeys.isGoing)}\n          onClick={() => setPredicate(PredicateKeys.isGoing, true)}\n        />\n        <Menu.Item\n          content=\"I'm Hosting\"\n          active={predicate.has(PredicateKeys.isHost)}\n          onClick={() => setPredicate(PredicateKeys.isHost, true)}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date: Date) => {\n          setPredicate(PredicateKeys.startDate, date);\n        }}\n        value={(predicate.get(PredicateKeys.startDate) as Date) || new Date()}\n      />\n    </>\n  );\n});\n\nexport default ActivityFilters;\n","import React, { Fragment } from \"react\";\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/Profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface IProps {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: IProps) {\n  const { profileStore, userStore } = useStore();\n  const { loading, updateFollowing } = profileStore;\n\n  const handleFollow = (e: SyntheticEvent, username: string) => {\n    e.preventDefault();\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  };\n\n  if (userStore.user?.username === profile.username) {\n    return null;\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color=\"teal\"\n          content={profile.following ? \"Following\" : \"Not following\"}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Following\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/Profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface IProps {\n  profile: Profile;\n}\n\nconst getShortenText = (numOfChars: number, text?: string) => {\n  if (!text) {\n    return null;\n  }\n\n  if (numOfChars >= text.length) {\n    return text;\n  }\n  const words = text.split(\" \");\n\n  let newText = \"\";\n\n  words.forEach((word) => {\n    if (newText.length + word.length <= numOfChars) {\n      newText += word + \" \";\n    }\n  });\n  return newText + \"...\";\n};\n\nexport default observer(function ProfileCard({ profile }: IProps) {\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{getShortenText(40, profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content>\n        <Icon name=\"user\" />\n        {profile.followerCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Image, List, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/Profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface IProps {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({\n  attendees,\n}: IProps) {\n  const styles = {\n    borderColor: \"orange\",\n    borderWidth: \"3px\",\n  };\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}\n            >\n              <Image\n                size=\"mini\"\n                circular\n                src={attendee.image || \"/assets/user.png\"}\n                bordered\n                style={attendee.following ? styles : {}}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/Activity\";\nimport { format } from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface IProps {\n  activity: Activity;\n}\n\nfunction ActivityListItem({ activity }: IProps) {\n  // console.log(activity);\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label\n            attached=\"top\"\n            color=\"red\"\n            content=\"Cancelled\"\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted By{\" \"}\n                <Link to={`/profiles/${activity.host?.username}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity.\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity.\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" />\n          {format(activity.date!, \"dd MM yyyy h:mm aa\")}\n          <Icon name=\"marker\" />\n          {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees || []} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default ActivityListItem;\n","import { observer } from \"mobx-react-lite\";\nimport React, { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nconst ActivityList = () => {\n  const {\n    activityStore: { groupedActivities },\n  } = useStore();\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => {\n        return (\n          <Fragment key={group}>\n            <Header sub color=\"teal\">\n              {group}\n            </Header>\n\n            {activities.map((activity) => (\n              <ActivityListItem key={activity.id} activity={activity} />\n            ))}\n          </Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nexport default observer(ActivityList);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Grid, List, Loader } from \"semantic-ui-react\";\nimport { PagingParams } from \"../../../app/models/Pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityListItemPlaceholder from \"./ActivityItemPlaceholder\";\nimport ActivityList from \"./ActivityList\";\n\nconst ActivityDashboard = () => {\n  const {\n    activityStore: {\n      loadActivities,\n      loadingInitial,\n      activityRegistry,\n      pagination,\n      setPagingParams,\n    },\n  } = useStore();\n\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  const handleGetNext = () => {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => {\n      setLoadingNext(false);\n    });\n  };\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) {\n      loadActivities();\n    }\n  }, [loadActivities, activityRegistry.size]);\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <List>\n          {loadingInitial && !loadingNext ? (\n            <>\n              <ActivityListItemPlaceholder />\n              <ActivityListItemPlaceholder />\n            </>\n          ) : (\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={handleGetNext}\n              hasMore={\n                !loadingNext &&\n                !!pagination &&\n                pagination.currentPage < pagination.totalPages\n              }\n              initialLoad={false}\n            >\n              <ActivityList />\n            </InfiniteScroll>\n          )}\n        </List>\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDashboard);\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Input, Label } from \"semantic-ui-react\";\n\ninterface IProps {\n  placeholder: string;\n  name: string;\n  label?: string;\n  type?: string;\n}\n\nexport default function MyTextInput(props: IProps) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={!!meta.error && meta.touched}>\n      <label>{props.label}</label>\n      <Input {...field} {...props} fluid />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function LoginForm() {\n  const { userStore, modalStore } = useStore();\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) => {\n        return userStore\n          .login(values)\n          .then(() => {\n            modalStore.closeModal();\n          })\n          .catch((error) => {\n            setErrors({ error: \"Invalid email or password\" });\n          });\n      }}\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Login to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface IProps {\n  errors: string[];\n}\n\nexport default function ValidationErrors({ errors }: IProps) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err, idx) => (\n            <Message.Item key={idx}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n  const { userStore, modalStore } = useStore();\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n        displayName: \"\",\n        username: \"\",\n        error: null,\n      }}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().email().required(),\n        password: Yup.string().required(),\n      })}\n      onSubmit={(values, { setErrors }) => {\n        return userStore\n          .register(values)\n          .then(() => {\n            modalStore.closeModal();\n          })\n          .catch((errors: string[]) => {\n            console.log(\"catch:: \", errors);\n            setErrors({ error: errors.join(\"||\") });\n          });\n      }}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form\n          className=\"ui form error\"\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <Header\n            as=\"h2\"\n            content=\"Sign up to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <ValidationErrors errors={errors.error?.split(\"||\") || []} />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            disabled={!isValid || !dirty || isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Header,\n  Image,\n  Segment,\n} from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nconst HomePage = () => {\n  const { userStore, modalStore } = useStore();\n\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to activities\n            </Button>\n          </>\n        ) : (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button\n              size=\"huge\"\n              inverted\n              onClick={() => {\n                modalStore.openModal(<LoginForm />);\n              }}\n            >\n              Login\n            </Button>\n\n            <Button\n              size=\"huge\"\n              inverted\n              onClick={() => {\n                modalStore.openModal(<RegisterForm />);\n              }}\n            >\n              Register\n            </Button>\n            <Divider horizontal inverted>\n              Or\n            </Divider>\n            <Button\n              size=\"huge\"\n              inverted\n              color=\"facebook\"\n              content=\"Login with facebook\"\n              loading={userStore.fbLoading}\n              onClick={userStore.facebookLogin}\n            />\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n};\n\nexport default observer(HomePage);\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface IProps {\n  inverted?: boolean;\n  content?: string;\n}\n\nexport default function LoadingComponent({\n  inverted = true,\n  content = \"Loading...\",\n}: IProps) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n}\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface IProps {\n  placeholder: string;\n  name: string;\n  label?: string;\n  rows: number;\n  style?: any;\n}\n\nexport default function MyTextArea(props: IProps) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={!!meta.error && meta.touched}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface IProps {\n  placeholder: string;\n  name: string;\n  label?: string;\n  options: any;\n}\n\nexport default function MySelectInput(props: IProps) {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={!!meta.error && meta.touched}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, data) => {\n          helpers.setValue(data.value);\n        }}\n        onBlur={() => {\n          helpers.setTouched(true);\n        }}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","export const categoryOptions = [\n  { text: \"Drinks\", value: \"drinks\" },\n  { text: \"Culture\", value: \"culture\" },\n  { text: \"Film\", value: \"film\" },\n  { text: \"Food\", value: \"food\" },\n  { text: \"Music\", value: \"music\" },\n  { text: \"Travel\", value: \"travel\" },\n];\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\n\n// interface IProps {\n//   placeholder: string;\n//   name: string;\n//   label?: string;\n// }\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={!!meta.error && meta.touched}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={field.value ? new Date(field.value) : null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/CategoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { ActivityFormValues } from \"../../../app/models/Activity\";\n\nconst ActivityForm = () => {\n  const { id } = useParams<{ id: string }>();\n  const { push } = useHistory();\n  const {\n    activityStore: {\n      loading,\n      loadingInitial,\n      createActivity,\n      updateActivity,\n      loadActivity,\n    },\n  } = useStore();\n\n  const [values, setValues] = useState<ActivityFormValues>(\n    new ActivityFormValues()\n  );\n\n  useEffect(() => {\n    if (id) {\n      loadActivity(id).then((activity) => {\n        setValues(new ActivityFormValues(activity));\n      });\n    }\n  }, [id, loadActivity]);\n\n  const handleFormSubmit = async (values: ActivityFormValues) => {\n    if (values?.id) {\n      await updateActivity(values);\n      push(`/activities/${values.id}`);\n    } else {\n      let id = uuid();\n      await createActivity({ ...values, id });\n      push(`/activities/${id}`);\n    }\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"Activity title is required.\"),\n    description: Yup.string().required(\"Activity description is required.\"),\n    category: Yup.string().required(),\n    date: Yup.string().required(\"Date is required.\").nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  if (loadingInitial && id) {\n    return <LoadingComponent content=\"Loading Activity...\" />;\n  }\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik\n        enableReinitialize\n        initialValues={values}\n        onSubmit={(values: ActivityFormValues) => handleFormSubmit(values)}\n        validationSchema={validationSchema}\n      >\n        {({\n          values,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          isValid,\n          dirty,\n        }) => (\n          <Form\n            className=\"ui form\"\n            autoComplete=\"false\"\n            onSubmit={handleSubmit}\n          >\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              placeholder=\"Category\"\n              name=\"category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"Time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <Header content=\"Location Details\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button\n              floated=\"right\"\n              type=\"submit\"\n              content=\"Submit\"\n              positive\n              loading={loading}\n              disabled={isSubmitting || !dirty || !isValid}\n            />\n            <Button\n              floated=\"right\"\n              type=\"button\"\n              content=\"Cancel\"\n              disabled={loading}\n              as={Link}\n              to={id ? `/activities/${id}` : \"activities\"}\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n};\n\nexport default observer(ActivityForm);\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface IProps {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: IProps) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik<{ body: string }>\n          initialValues={{ body: \"\" }}\n          onSubmit={async (values, { resetForm }) => {\n            await commentStore.addComment(values);\n            resetForm();\n          }}\n          validationSchema={Yup.object({ body: Yup.string().required() })}\n        >\n          {({ isSubmitting, isValid, handleSubmit, errors }) => {\n            return (\n              <Form className=\"ui-form\">\n                <Field name=\"body\">\n                  {({ field }: FieldProps) => (\n                    <div style={{ position: \"relative\" }}>\n                      <Loader active={isSubmitting} />\n                      <textarea\n                        style={{ width: \"100%\" }}\n                        placeholder=\"Enter your comment (ENTER to submit, SHIFT + ENTER for new line)\"\n                        rows={4}\n                        {...field}\n                        onKeyPress={(e) => {\n                          if (e.key === \"Enter\" && e.shiftKey) {\n                            return;\n                          }\n                          if (e.key === \"Enter\" && !e.shiftKey) {\n                            e.preventDefault();\n                            if (isValid) {\n                              handleSubmit();\n                            }\n                          }\n                        }}\n                      />\n                    </div>\n                  )}\n                </Field>\n              </Form>\n            );\n          }}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => {\n            return (\n              <Comment key={comment.id}>\n                <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n                <Comment.Content>\n                  <Comment.Author\n                    as={Link}\n                    to={`/profiles/${comment.username}`}\n                  >\n                    {comment.displayName}\n                  </Comment.Author>\n                  <Comment.Metadata>\n                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                  </Comment.Metadata>\n                  <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\n                    {comment.body}\n                  </Comment.Text>\n                </Comment.Content>\n              </Comment>\n            );\n          })}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/Activity\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: \"1000\", left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"dd MM yyyy h:mm aa\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost && (\n          <>\n            <Button\n              color={activity.isCancelled ? \"green\" : \"red\"}\n              floated=\"left\"\n              basic\n              content={\n                activity.isCancelled\n                  ? \"Re-activate Activity\"\n                  : \"Cancel Activity\"\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              color=\"orange\"\n              floated=\"right\"\n              as={Link}\n              disabled={activity.isCancelled}\n              to={`/manage/${activity.id}`}\n            >\n              Manage Event\n            </Button>\n          </>\n        )}\n        {!activity.isHost && activity.isGoing && (\n          <Button loading={loading} onClick={updateAttendance}>\n            Cancel attendance\n          </Button>\n        )}\n        {!activity.isHost && !activity.isGoing && (\n          <Button\n            loading={loading}\n            onClick={updateAttendance}\n            color=\"teal\"\n            disabled={activity.isCancelled}\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { format } from \"date-fns\";\nimport { Activity } from \"../../../app/models/Activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, \"dd MM yyyy h:mm aa\")}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import React from \"react\";\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/Activity\";\n\ninterface IProps {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({ activity }: IProps) {\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {activity.attendees!.length}{\" \"}\n        {activity.attendees!.length === 1 ? \"Person\" : \"People\"} going.\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {activity.attendees!.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n              {attendee.username === activity.hostUsername && (\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\n\nconst ActivityDetails = () => {\n  const {\n    activityStore: {\n      selectedActivity: activity,\n      loadActivity,\n      loadingInitial,\n      clearSelectedActivity,\n    },\n  } = useStore();\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) {\n      loadActivity(id);\n    }\n    return () => {\n      clearSelectedActivity();\n    };\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDetails);\n","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios.get(baseUrl + \"buggy/not-found\").catch((err) => console.log(err));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios.get(baseUrl + \"buggy/server-error\").catch((err) => {\n      console.log(err.response);\n    });\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios\n      .get(baseUrl + \"activities/notaguid\")\n      .catch((error) => console.log(error));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Oops - we've looked everywhere and could not find this.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n  return (\n    <Container>\n      <Header as=\"h1\" content=\"Server error\" />\n      <Header as=\"h5\" color=\"red\" content={commonStore.error?.message} />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\n          <code style={{ marginTop: 10 }}>{commonStore.error?.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      size=\"mini\"\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n});\n","import { Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Header, Icon, Segment } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { Profile } from \"../../app/models/Profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface IProps {\n  profile: Profile;\n}\n\ninterface IProfile {\n  displayName: string;\n  bio: string;\n}\n\nexport default observer(function ProfileAbout({ profile }: IProps) {\n  const {\n    profileStore: { loading, updateProfile },\n  } = useStore();\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const handleSubmit = async ({ bio, displayName }: IProfile) => {\n    await updateProfile({ bio, displayName, username: profile.username });\n    setIsEditMode(false);\n  };\n\n  return (\n    <Segment clearing>\n      <Segment clearing>\n        <Header floated=\"left\">\n          <Icon name=\"user\" /> About {profile.displayName}\n        </Header>\n        {isEditMode ? (\n          <Button\n            content=\"Cancel\"\n            floated=\"right\"\n            color=\"grey\"\n            onClick={() => setIsEditMode(!isEditMode)}\n          />\n        ) : (\n          <Button\n            content=\"Edit\"\n            floated=\"right\"\n            color=\"green\"\n            primary\n            onClick={() => setIsEditMode(!isEditMode)}\n          />\n        )}\n      </Segment>\n      {isEditMode ? (\n        <Segment clearing>\n          <Formik<IProfile>\n            initialValues={{\n              bio: profile.bio || \"\",\n              displayName: profile.displayName || \"\",\n            }}\n            onSubmit={(values: IProfile) => handleSubmit(values)}\n          >\n            {({\n              values,\n              isSubmitting,\n              errors,\n              dirty,\n              isValid,\n              resetForm,\n              handleSubmit,\n            }) => {\n              return (\n                <Form\n                  className=\"ui form\"\n                  autoComplete=\"false\"\n                  onSubmit={handleSubmit}\n                >\n                  <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n                  <MyTextArea name=\"bio\" placeholder=\"Bio\" rows={5} />\n\n                  <Button\n                    floated=\"right\"\n                    type=\"submit\"\n                    content=\"Submit\"\n                    positive\n                    loading={loading}\n                    disabled={isSubmitting || !dirty || !isValid}\n                  />\n                  <Button\n                    floated=\"right\"\n                    type=\"button\"\n                    content=\"Cancel\"\n                    disabled={loading}\n                    onClick={() => {\n                      resetForm();\n                      setIsEditMode(false);\n                    }}\n                  />\n                </Form>\n              );\n            }}\n          </Formik>\n        </Segment>\n      ) : (\n        <>\n          {profile.bio?.split(\"\\n\").map((bio, idx) => (\n            <p key={idx}>{bio}</p>\n          ))}\n        </>\n      )}\n    </Segment>\n  );\n});\n","import React, { SyntheticEvent, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../app/stores/store\";\nimport { UserActivity } from \"../../app/models/UserActivity\";\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const { loadUserActivities, profile, loadingActivities, activities } =\n    profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username, \"future\");\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {activities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React from \"react\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface IProps {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({\n  imagePreview,\n  setCropper,\n}: IProps) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface IProps {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({ setFiles }: IProps) {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as any,\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"#00ff00\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, { preview: URL.createObjectURL(file) })\n        )\n      );\n    },\n    [setFiles]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop Image Here\" />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface IProps {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: IProps) {\n  const [files, setFiles] = useState([] as any);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  const onCrop = () => {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => {\n        if (blob) {\n          uploadPhoto(blob);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"4\">\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width=\"1\" />\n      <Grid.Column width=\"4\">\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Image\" />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width=\"1\" />\n      <Grid.Column width=\"4\">\n        <Header sub color=\"teal\" content=\"Step 3 - Preview And Upload\" />\n        <>\n          <div\n            className=\"img-preview\"\n            style={{ overflow: \"hidden\", minHeight: 200 }}\n          />\n          {files && files.length > 0 && (\n            <Button.Group widths=\"2\">\n              <Button\n                onClick={onCrop}\n                positive\n                icon=\"check\"\n                loading={loading}\n              />\n              <Button\n                onClick={() => setFiles([])}\n                icon=\"close\"\n                disabled={loading}\n              />\n            </Button.Group>\n          )}\n        </>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/image-upload/PhotoUploadWidget\";\nimport { Photo, Profile } from \"../../app/models/Profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface IProps {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: IProps) {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      uploading,\n      loading,\n      setMainPhoto,\n      deletePhoto,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  const handlePhotoUpload = (file: Blob) => {\n    uploadPhoto(file).then(() => {\n      setAddPhotoMode(false);\n    });\n  };\n\n  const handleSetMainPhoto = (\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) => {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  };\n\n  const handleDeletePhoto = (\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) => {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  };\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width=\"16\">\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width=\"16\">\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handlePhotoUpload}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow=\"5\">\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths=\"2\">\n                      <Button\n                        basic\n                        color=\"green\"\n                        content=\"Main\"\n                        name={`${photo.id}-main`}\n                        disabled={photo.isMain}\n                        loading={target === `${photo.id}-main` && loading}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color=\"red\"\n                        icon=\"trash\"\n                        name={`${photo.id}-del`}\n                        loading={target === `${photo.id}-del` && loading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/Profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileActivities from \"./ProfileActivities\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\ninterface IProps {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({ profile }: IProps) {\n  const { profileStore } = useStore();\n  const panes = [\n    { menuItem: \"About\", render: () => <ProfileAbout profile={profile} /> },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: \"Event\", render: () => <ProfileActivities /> },\n    {\n      menuItem: \"Followers\",\n      render: () => <ProfileFollowings />,\n    },\n    {\n      menuItem: \"Following\",\n      render: () => <ProfileFollowings />,\n    },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => {\n        profileStore.setActiveTab(data.activeIndex);\n      }}\n    />\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/Profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface IProps {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({ profile }: IProps) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width=\"12\">\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profile?.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile?.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width=\"4\">\n          <Statistic.Group widths=\"2\">\n            <Statistic label=\"Followers\" value={profile.followerCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const {\n    profileStore: { loadProfile, loadingProfile, profile, setActiveTab },\n  } = useStore();\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    };\n  }, [username, loadProfile, setActiveTab]);\n\n  if (loadingProfile) {\n    return <LoadingComponent content=\"Loading content...\" />;\n  }\n  return (\n    <Grid>\n      <Grid.Column width=\"16\">\n        {profile && <ProfileHeader profile={profile} />}\n        {profile && <ProfileContent profile={profile} />}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React, { ComponentType } from \"react\";\nimport { Redirect, RouteComponentProps, RouteProps } from \"react-router\";\nimport { Route } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface IProps extends RouteProps {\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\n}\n\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}: IProps) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Navbar from \"./Navbar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport HomePage from \"../../features/home/HomePage\";\nimport { Route, Switch, useLocation } from \"react-router\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => {\n        commonStore.setAppLoaded();\n      });\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) {\n    return <LoadingComponent content=\"Loading App...\" />;\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar theme=\"colored\" />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <Navbar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  exact\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                  key={location.key}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <Route exact path=\"/errors\" component={TestErrors} />\n                <Route path=\"/servererror\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./app/layout/App\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { createBrowserHistory } from \"history\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}